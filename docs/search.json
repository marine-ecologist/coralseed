[{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://marine-ecologist.github.io/coralseed/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed spatially explicit probabilistic model aims  quantify spatial footprint propagule reseeding restoration projects. model based input high-resolution hydrodynamic models track individual particles space time. including key parameters larval biology traits including developmental rates, habitat specific substrate settlement preferences, swimming behaviour, individual-based probability larval settlement – transition planktonic, motile larvae attached metamorphosed polyps reef substrata – can modelled 105 - 107 larvae. Individual-based settlement probability dispersal paths overlaid onto high-resolution habitat maps form spatially-explicit model settlement following release coral larvae. coralseed aims provide insight key knowledge gaps larval restoration insights large-scale larval dispersal settlement processes. varying initial model parameters (e.g. tidal currents, time release, larval development, larval densities, location release sites), simulation modelling approach can used quantify likely spatial footprint propagule releases expected settlement densities. Ultimately, coralseed platform allows optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere, aiding managers planners spatial prioritisation restoration operations achieve best possible outcomes. platform can also applied key coastal marine organisms oyster reefs, mangrove forests, seagrass meadows. coralseed available R package via remotes::install_github(“marine-ecologist/coralseed”).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Coastal ecosystems, including seagrasses, saltmarshes, mangroves, provide essential services shoreline stabilization, carbon sequestration, biodiversity support (Duarte et al., 2013). However, habitats face increasing degradation due anthropogenic pressures, climate change, habitat fragmentation (Waycott et al., 2009). result, restoration projects focusing propagule reseeding gained prominence scalable approaches restore ecosystem function biodiversity (Vanderklift et al. 2020). Large-scale reseeding programs, particularly vegetated coastal systems, demonstrated success restoring habitat continuity ecosystem resilience (van Katwijk et al., 2016). approaches show promise scaling restoration efforts, key challenge optimizing approaches predicting propagules disperse settle following release. Understanding patterns dispersal subsequent spatial footprint reseeding restoration efforts critical evaluating cost-benefit trade-offs restoration techniques, improving strategic planning, scaling operations effectively (Lowe et al., 2015). terrestrial systems, probabilistic modelling approaches increasingly employed quantify dispersal patterns interaction environmental conditions (e.g, van Vizentin-Bugon et al 2022, Ditmer et al 2023), enabling improved decision-making frameworks. coastal ecosystems, restoration vegetated coastal ecosystems seagrasses mangroves often involves passive propagules, whose dispersal patterns easier predict (Orth et al., 2006). contrast, restoring invertebrate habitats tropical coral reefs temperate oyster reefs larval reseeding presents additional challenges due complexity substrates larval behaviour selecting habitats (e.g., Babcock & Mundy 1996, Raimondi & Morse 2000). Fine-scale hydrodynamics, including tidal currents, eddies, vertical stratification, influence larval dispersal three-dimensional space (Cowen et al., 2000), larval swimming behaviour actively interacts water column structure makes dispersal predictions complex (Leis, 2007). complicating predictions larval dispersal understanding competency rates—time takes larvae capable settlement—influences dispersal window, affecting distance likelihood reaching suitable habitats (Graham et al. 2008, Connolly & Baird 2010). Even larvae competent, substrate electivity preferences specific settlement surfaces may prevent successful settlement (e.g., Harrington et al. 2004, Abdul Wahab et al 2023, Randall et al 2025), emphasizing need detailed habitat data, hydrodynamic models, larval behavioural parameterisation improve predictions. part due complexities, modelling tools effective finer spatial scales applied restoration operations (100s metres hectares; Bayraktarov et al. 2016) remain scarce, limiting ability predict broader spatial footprint outcomes larval reseeding efforts (see Gouezo et al. 2025 recent advancements). Access tools substantially improve resource managers capacity decide upon site selection optimise approaches facilitate evidence-based restoration plans assessments long-term ecological benefits. address challenges, developed ‘coralseed’, spatially explicit probabilistic model designed simulate larval dispersal settlement patterns following propagule releases. incorporating high-resolution oceanographic data, biological traits, habitat preferences, coralseed significantly improves spatial prediction restoration outcomes, facilitating dynamic decision making conservation science.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"overview-of-the-coralseed-v1-1-0-model","dir":"Articles","previous_headings":"","what":"2. Overview of the coralseed v1.1.0 model","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"‘coralseed’ v1.1.0 spatially explicit probabilistic model aims quantify effect size spatial footprint larval reseeding restoration projects. model based input high-resolution hydrodynamic models track individual particles space time (e.g. Bruyère et al 2023, Grech et al 2016, Ani et al 2024, Gouezo et al 2025). parameterising larval biology traits including competency rates, habitat specific substrate settlement preferences, swimming behaviour, individual-based probability settlement can modelled 105 - 107 larvae. Individual-based settlement probability dispersal paths overlaid onto high-resolution habitat maps form spatially-explicit model settlement patterns densities following release coral larvae. 2.1 coralseed modelling workflow ‘coralseed’ differs existing modelling approaches coral reefs three key ways: 1) adopting individual-based approach, model allows tracking individual larvae within cohorts space time, 2) tracking larvae cartesian space, model allows spatially explicit patterns dispersal, settlement, growth across coral reef seascapes, 3) allowing flexibility input particle tracking simulated data file format parameterisation functions, model facilitates parameterisations ecological processes (e.g. settlement, mortality, growth, electivity) allows use across almost dispersal simulation. Coupled high-resolution hydrodynamic models constantly tested refined field (e.g. Gouezo et al 2025, Mason et al. 2025) allows high-resolution dispersal predictions scale metres 100s metres. ‘coralseed’ based upon premise larval reseeding, larvae released onto coral reefs “seed” adjacent substrates juvenile corals, ultimate outcome boosting densities adult corals /increasing coral cover (Doropoulos et al 2019). ‘coralseed’ workflow seeks model process : 1) seeding larvae across particle tracks quantify spatiotemporal trajectories individuals (.e., larvae dispersing released?), 2) predicting larval competency (time--settlement) along particle track (.e., larvae ready settle release?), 3) predicting trajectories larvae dispersal (.e., passing across coral reef habitats?), 4) predicting probability settlement within habitats (.e., larvae elect settle pass coral habitat?), 5) quantify combined effects competency electivity probability larval settlement (.e., larvae competent settle, encounter habitat elect settle?), 6) spatial patterns dispersal settlement (e.g. far larvae travel release, settlement ‘hotspots’ close point release?). varying initial model parameters (e.g., tidal currents, time release, location release sites, larval competency rates, larval densities), simulation modelling approach can used quantify likely spatial footprint expected settlement densities, allowing optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere. ‘coralseed’ available R ‘package’ (http://github.com/marine-ecologist/coralseed/). package relies ‘sf’ package spatial vector data processing, ‘brms’ package Bayesian probabilistic modelling ecological parameters, ‘tmap’ package visualising data outputs.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"spatially-explicit-model-based-approach","dir":"Articles","previous_headings":"","what":"2.2 Spatially explicit model-based approach","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"‘coralseed’ based upon premise larval reseeding, larvae released onto coral reefs “seed” adjacent substrates juvenile corals, ultimate outcome boosting densities adult corals /increasing coral cover (Doropoulos et al 2019). ‘coralseed’ workflow seeks model process : 1) seeding larvae across particle tracks quantify spatiotemporal trajectories individuals (.e., larvae dispersing released?), 2) predicting larval competency (time--settlement) along particle track (.e., larvae ready settle release?), 3) predicting trajectories larvae dispersal (.e., passing across coral reef habitats?), 4) predicting probability settlement within habitats (.e., larvae elect settle pass coral habitat?), 5) quantify combined effects competency electivity probability larval settlement (.e., larvae competent settle, encounter habitat elect settle?), 6) spatial patterns dispersal settlement (e.g. far larvae travel release, settlement ‘hotspots’ close point release?). varying initial model parameters (e.g., tidal currents, time release, location release sites, larval competency rates, larval densities), simulation modelling approach can used quantify likely spatial footprint expected settlement densities, allowing optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-r-package","dir":"Articles","previous_headings":"","what":"2.3 coralseed R package","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"‘coralseed’ available R ‘package’ (http://github.com/marine-ecologist/coralseed/). package relies ‘sf’ package spatial vector data processing, ‘brms’ package Bayesian probabilistic modelling ecological parameters, ‘tmap’ package visualising data outputs.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"overview-of-the-coralseed-model","dir":"Articles","previous_headings":"","what":"3. Overview of the coralseed model","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"‘coralseed’ v1.1.0 spatially explicit probabilistic model aims quantify spatial footprint larval reseeding restoration projects. coralseed based upon premise larval reseeding, larvae released water column onto coral reefs “seed” adjacent substrates juvenile corals, ultimate outcome boosting densities adult corals /increasing coral cover (Doropoulos et al 2019). model: 1) seeds larvae particle tracks (.e., larvae dispersing released?), 2) predicts larval competency (time--settlement) larvae within particle track (.e. ready settle released?), 3) habitats larvae cross dispersed (.e. passing across coral reef habitats?), 4) settlement potential within habitats (.e. larvae elect settle pass?) 5) combined probability larval settlement (.e. larvae competent settle, encounter habitat, elect settle), 6) released larvae, spatial patterns (e.g. far larvae travel release? settlement ‘hotspots’?). varying initial model parameters (e.g. tidal currents, time release, location release sites, larval competency rates, larval densities), simulation modelling approach can used quantify likely spatial footprint expected settlement densities, allowing optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere. date, region local scale dispersal studies consider particle ‘settled’ competent intersect reef habitat (e.g. Hock et al. 2017, Figueiredo et al. 2022, Ani et al 2024, Cresswell et al 2024). studies assume : reef habitats equal term settlement success, parameterised competency rates discrete 24hr periods (Hock et al. 2017, Figueiredo et al. 2022) rather modelling competency continuous process (see Ani et al 2024 Cresswell et al 2024 finer-scale modelling competency). recent advances metacommunity modelling allow improved predictions settlement across seascapes, model outputs quantify settlement site level (.e. ~0.3km 1km), none existing modelling approaches allow tracking individual larvae juvenile corals space time (.e. 4D modelling cartesian coordinates [xyz] time trajectory). `coralseed’ aims improve existing modelling approaches accurately predict spatial settlement patterns. model approach 1) allows spatially explicit tracking larvae time modelling individual larvae along unique high-resolution particle tracks, 2) incorporates high-resolution timeseries 1-min intervals, allowing fine-scale temporal modelling competency mortality along larval trajectories, 3) improves spatially explicit settlement patterns incorporating habitat specific electivity seascape scales, 4) enables spatially explicit quantification restoration outcomes modelling total outputs (.e. settled corals) initial pool seeded larvae. `coralseed’ also highly flexible terms dispersal models, including regional-scale modelling (e.g., ~200 m resolution OceanParcels particle tracks, Ani et al 2024) high-resolution local-scale modelling (e.g. 30 m resolution CONNIE particle tracks, Gouezo et al 2025). coralseed series functions combined R ‘package’ available via https://github.com/marine-ecologist/coralseed. coralseed uses sf stars packages (Pebesma & Bivand 2023) vector raster data, tmap (Tennekes 2018), leaflet (Cheng et al 2024), networkD3 (Allaire et al 2017) data visualisation, brms (Bürkner 2018) Bayesian modelling input parameters.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-background","dir":"Articles","previous_headings":"","what":"3.1 coralseed background","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed based upon premise larval reseeding, larvae released water column onto coral reefs “seed” adjacent substrates juvenile corals, ultimate outcome boosting densities adult corals /increasing coral cover (Doropoulos et al 2019). model: 1) seeds larvae particle tracks (.e., larvae dispersing released?), 2) predicts larval competency (time--settlement) larvae within particle track (.e. ready settle released?), 3) habitats larvae cross dispersed (.e. passing across coral reef habitats?), 4) settlement potential within habitats (.e. larvae elect settle pass?) 5) combined probability larval settlement (.e. larvae competent settle, encounter habitat, elect settle), 6) released larvae, spatial patterns (e.g. far larvae travel release? settlement ‘hotspots’?). varying initial model parameters (e.g. tidal currents, time release, location release sites, larval competency rates, larval densities), simulation modelling approach can used quantify likely spatial footprint expected settlement densities, allowing optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"spatially-explicit-modelling","dir":"Articles","previous_headings":"","what":"3.2 Spatially explicit modelling","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"date, region local scale dispersal studies consider particle ‘settled’ competent intersect reef habitat (e.g. Hock et al. 2017, Figueiredo et al. 2022, Ani et al 2024, Cresswell et al 2024). studies assume : reef habitats equal term settlement success, parameterised competency rates discrete 24hr periods (Hock et al. 2017, Figueiredo et al. 2022) rather modelling competency continuous process (see Ani et al 2024 Cresswell et al 2024 finer-scale modelling competency). recent advances metacommunity modelling allow improved predictions settlement across seascapes, model outputs quantify settlement site level (.e. ~0.3km 1km), none existing modelling approaches allow tracking individual larvae juvenile corals space time (.e. 4D modelling cartesian coordinates [xyz] time trajectory). `coralseed’ aims improve existing modelling approaches accurately predict spatial settlement patterns. model approach 1) allows spatially explicit tracking larvae time modelling individual larvae along unique high-resolution particle tracks, 2) incorporates high-resolution timeseries 1-min intervals, allowing fine-scale temporal modelling competency mortality along larval trajectories, 3) improves spatially explicit settlement patterns incorporating habitat specific electivity seascape scales, 4) enables spatially explicit quantification restoration outcomes modelling total outputs (.e. settled corals) initial pool seeded larvae. `coralseed’ also highly flexible terms dispersal models, including regional-scale modelling (e.g., ~200 m resolution OceanParcels particle tracks, Ani et al 2024) high-resolution local-scale modelling (e.g. 30 m resolution CONNIE particle tracks, Gouezo et al 2025).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-v1-1-0-r-package","dir":"Articles","previous_headings":"","what":"3.3 coralseed v1.1.0 R package","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed series functions combined R ‘package’ available via https://github.com/marine-ecologist/coralseed. coralseed uses sf stars packages (Pebesma & Bivand 2023) vector raster data, tmap (Tennekes 2018), leaflet (Cheng et al 2024), networkD3 (Allaire et al 2017) data visualisation, brms (Bürkner 2018) Bayesian modelling input parameters.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-parameterisation","dir":"Articles","previous_headings":"","what":"4. coralseed parameterisation","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Figure 1 ) spatial parameterisation (reef habitat maps particle tracks), example CONNIE model simulation Mermaid Bay, Lizard Island (8 hrs post simulated larval release), ecological parameterisation b) cumulative settlement time two experiments (red = wild larvae, blue = aquarium experiment), c) habitat electivity habitat polygons Lizard Island parameterised field data habitat-specific settlement preferences (see text details), d) extrinsic mortality curves simulating Type – Type III mortality (Odum 1959) Weibull function applied 25% 1000 simulated larvae. parameterise coralseed model, used range published datasets, hydrodynamic models, new experimental results larval settlement assays. possible, coralseed written flexible parameterisation, allowing incorporation different new datasets, different model fits existing data account varying ecological functions (e.g., flexibility exponential, logarithmic, Weibull functions fitting models settlement data). Spatial parameterisation critical restoration models, particularly accurately predicting pathways larval dispersal, settlement, determining overall spatial footprint restoration outcomes. Spatial parameterisation coralseed v1.1.0 individual-based, functions tracking larvae along dispersal paths identifying whether trajectories intersect suitable habitat settlement. coralseed model employs detailed spatial tracking individual coral larvae release point potential settlement sites. accepts dispersal path data XY coordinates provided simple features (sf) POINT geometry format (see Table 1 example). approach allows larva uniquely tracked using ‘id’, spatial positions (‘geometry’) captured discrete temporal intervals (‘time’). Input data flexibility significant advantage coralseed, strict regular intervals input files mandatory. Instead, coralseed internally interpolates larval trajectories consistent timesteps—commonly set resolutions either 1 5 minutes—ensuring robust comparable outcomes across diverse input dispersal models. flexibility accommodates variability data availability observational frequency, making coralseed suitable integration various dispersal modelling frameworks (Figure 1a). Bounding box: xmin: 1629602 ymin: 8350374 xmax: 1630097 ymax: 8352354 Geometry type: POINT | Projected CRS: AGD84 / AMG zone 53 coralseed validated various particle tracking simulated data, CONNIE (CONNectivity InterfacE; Gouezo et al., 2025) oceanparcels (Ani et al., 2024), simulated within Great Barrier Reef. Given current constraints handling zarr data format (large N-dimensional typed arrays) within R, coralseed provides dedicated R functions specifically designed facilitate direct conversions oceanparcels outputs sf-compatible formats, ensuring accessibility usability across marine restoration projects. Predicting spatial patterns coral larval settlement requires accurate mapping benthic habitats determine suitable settlement locations. predict spatial patterns larval settlement, coralseed tracks particle paths across benthic substrates determine probability settlement based habitat electivity (Figure 1c). default habitat maps employed coralseed originate high-resolution Allen Coral Atlas (Lyons et al., 2024). However, model’s design allows integration vector-based habitat maps (e.g., Andréfouët & Bionaz, 2021), granting restoration practitioners flexibility apply region-specific updated habitat information may improve settlement predictions. coralseed v1.1.0, suitability substrates coral settlement assessed using two-step procedure: Exclusion Non-Colonisable Substrates: step systematically removed substrates known unsuitable coral larval settlement, including microalgal mats, seagrass beds, sandy areas, coral/algae-dominated regions, rubble. Stratification Colonisable Substrates: remaining substrates classified according geomorphic habitat categories provided Allen Coral Atlas, allowing spatially explicit predictions settlement outcomes based habitat type. shallow lagoon  deep lagoon habitats explicitly excluded due high-sediment loading suboptimal habitats coral larval settlement. following geomorphic categories included: Back Reef Slope • Sheltered Reef Slope • Plateau  • Inner Reef Flat • Outer Reef Flat • Reef Slope • Reef Crest larval phase corals benthic invertebrates (e.g., echinoderms, gastropods; Hadfield et al. 2015) consists pre-competent phase, development still underway larvae yet competent settle, competent phase, larvae capable settlement suitable substrates present (e.g., Connolly & Baird 2010, Randall et al. 2024). modelling larval reseeding potential, understanding short-term (hourly) patterns larval competency critical. larvae settle immediately following larval release (<1-2 hours), spatial footprint restoration efforts small scale (<100 m) concentrated (high densities settlers). larval competency peaks 6-12 hours release, spatial footprint larger scale (>1 km) diffuse. Understanding fine-scale patterns larval competency allows complex larval deliveries leveraging slack current conditions increase larval settlement densities reduced dispersal footprints following larval reseeding efforts. larval reseeding programs, larvae cultured aquaculture facilities land (e.g., Edwards et al. 2015, Pollock et al. 2017, dela Cruz & Harrison 2017, Severati et al. 2024) sea (e.g., Heyward et al. 2002, Omori et al. 2007, Doropoulos et al. 2019) held reach optimal competency. Optimal competency typically determined ) adding n larvae inducer quantifying proportion settled 10-24 hours, ii) adding settlement substrata larval cultures quantifying proportion larvae settle 24-hours. Competency assays repeated daily larvae released onto target reef area peak competency, typically targeted >50% cohort, maximise impact larval reseeding. metric “competency” defined experimentally different ways. Typically, subsets larvae cultures counted added conditioned tiles / crustose coralline algae fragments assayed 24-hours later (e.g., Heyward & Negri 1999, Connolly & Baird 2010), proportion settled/metamorphosed, swimming “dead” larvae recorded. coral larvae undergo peak competency days fertilisation, assays critical understanding settlement dynamics used estimating dispersal potential (e.g., Connolly & Baird 2010) parameterise large-scale ecosystem models include larval connectivity estimates (e.g., Condie et al 2021, Gouezo et al. 2021, Bozec et al. 2022) coralseed defines competency duration time larval release settlement (perspective larvae n days old following fertilisation) align propagule reseeding approach utilised restoration operations. definition differs traditional studies larval competency (e.g. Heyward & Negri 1999, Connolly & Baird 2010) derive larval competency proportion n larvae settling 24-hour period across multiple days. distinction important, coralseed models competency continuous individual-based measures within single cohort using hourly measurements, traditional studies (dispersal models, e.g. Ani et al 2024) define discrete (daily) timesteps across multiple cohorts. parameterise coralseed, conducted two separate competency assays: 1) using single-species (Acropora tenuis) laboratory-reared culture SeaSim (Australian Institute Marine Science, Townsville) November 2022, 2) using multi-species larvae harvested wild slicks collected northern Great Barrier Reef Lizard Island December 2022. experiments tracked settlement replicated cohorts larvae (n=100 per replicate) hourly timepoints (either 0 24-hours SeaSims 0 12-hours wild spawn). Five replicate pre-conditioned settlement tiles placed individual 1-litre flow-aquaria simulate natural conditions, 100 larvae released container t0, beginning 3.5 days following spawning SeaSims 4.5 days following spawning Lizard Island. Tiles imaged hourly following larval release using high-resolution camera (Sony a7R IV) -water probe lens (Laowa 24mm) t0-6 hours ~t10 hours. proportion larvae able settle time quantified tracking individual attachment subsequent metamorphosis larvae tiles time point. Results wild lab cultured larvae similar initial settlement occurred within first 1-2 hours (10% 6% 2hrs respectively) slowed around 6-10 hours release (16% 20% respectively, Figure 1b). Settlement 10 hours averaged 10 - 30% total larvae, settlement continued experiments without reaching clear asymptote either end point. Predictions time--settlement parameterising dispersal models (105 - 106 larvae) obtained draws posterior brms model outputs. coralseed incorporates additional parameter extrinsic mortality early dispersal/settlement stages accounts exogenous sources mortality otherwise unaccounted larval development planktivory (Fabricius et al 2004) entanglement/entrapment algal turfs (Birrell et al 2005). parameter independent intrinsic mortality (.e. genetic deformities, fertilisation defects) inherent parameterisation time--competency curves based experimental data (see 3.2.1). Given complexities magnitude shape distribution, extrinsic mortality coralseed v1.1.0 parameterised approximate classic survival curves (.e., Type , Type II, Type III survival, sensu Odum 1953): • Type survivorship: high age-specific survival probability early middle dispersal, followed increasing mortality rapid decline survival late-stage dispersal. • Type II survivorship: constant mortality time fixed probability survival • Type III survivorship: high mortality early stages low rates mortality high probability survival late-stage dispersal, typical marine invertebrate larvae. selection habitats coral larvae settlement key determining growth survival adult life-history stage (Price 2010). laboratory experiments, coral larvae respond specific biotic settlement cues substrates dominated early successional crustose coralline algae (Harrington et al. 2004, Abdul Wahab et al 2023) microbial biofilms associated optimal shallow-water settlement habitats (Webster 2004), avoiding habitats negative outcomes long-turf algae, sponges, ascidians (Wakwella et al 2020). patterns consistent large-scale field assessments coral settlement, general pattern higher coral settlement rates forereef reef slope areas compared backreef reef flat locations (Baird & Hughes 1997, Arnold et al 2010, Doropoulos et al. 2015). coralseed v0.1.1 uses data settlement tiles Lizard Island (Baird Hughes 1998, Baird 2001) publications Great Barrier Reef (Harriot 1985, Mundy & Babcock 1998, Baird 2001, Baird et al 2003, Doropoulos et al 2015) parameterise settlement probability across different habitat types derived Allen Coral atlas spatial maps (section 3.1.2) P=1 absolute settlement P=0 settlement: “Reef Crest” - high settlement probability (P = 0.9 ± 0.1) “Reef Slope” - high settlement probability (P = 0.9 ± 0.1) “Sheltered Reef Slope” - lower exposed habitats (P = 0.7 ± 0.1) “Back Reef Slope” - lower sheltered slope habitats (P = 0.6 ± 0.1) “Outer Reef Flat” - half settlement reef crest/slope (P = 0.45 ± 0.1) “Inner Reef Flat” - senescent habitat, low settlement potential (P = 0.3 ± 0.1) “Plateau” - deep (>10m) habitat, low probability settlement (P = 0.2 ± 0.1) Habitat-specific settlement probabilities used parameterise spatial maps sampling normal distribution mean (± standard error) probability (Figure 1C). determine settlement, coralseed model takes individual particle paths maps settlement probability id according habitats encountered along trajectory. Note probability settlement probability settlement larvae competent (see 4.1.4 details). two caveats determining larval settlement currently implemented coralseed: Larval “attraction”: coralseed account chemical cues habitats positive (negative) settlement cues may cause larvae selectively swim towards (away ) area settlement (see Dixson et al 2014). dispersal models include “halo” around reefs particles pass , larvae allocated reef (e.g., Hock et al. 2019), practice hard implement ) particle tracks hard-wired, spatial buffers can used identify habitats within given distance, forcing settlement p=1 difficult using anything rapid algorithm produces unrealistic results, ii) lab experiments demonstrate substrate electivity, capacity larvae physically swim currents ecologically relevant scales debatable (see Hata et al 2017), iii) paper attempting validate field settings (Dixson et al 2014) retracted. Benthic boundary layers: coralseed assumes larvae free flowing currents doesn’t account “sticky” benthic boundary conditions (Jumars & Nowell 1984). development version coralseed slows larvae 3-fold p=1 larvae pass across reef substrates simulate “searching” behaviour, far ) difficult implement ii) difficult parameterise due lack data.","code":"| id | time               | geometry                    | |----|--------------------|-----------------------------| | 0  | 16/12/2022 14:06   | POINT (1630092 8352332)     | | 0  | 16/12/2022 14:17   | POINT (1630036 8352300)     | | 0  | 16/12/2022 14:29   | POINT (1629975 8352271)     | | 0  | 16/12/2022 14:41   | POINT (1629906 8352243)     | | 0  | 16/12/2022 14:53   | POINT (1629821 8352205)     | | 0  | 16/12/2022 15:05   | POINT (1629739 8352121)     | | 0  | 16/12/2022 15:17   | POINT (1629697 8352018)     | | 0  | 16/12/2022 15:29   | POINT (1629665 8351921)     | | 0  | 16/12/2022 15:41   | POINT (1629646 8351828)     | | 0  | 16/12/2022 15:53   | POINT (1629634 8351736)     |"},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"spatial-parameters","dir":"Articles","previous_headings":"","what":"4.1 Spatial parameters","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Spatial parameterisation critical restoration models, particularly accurately predicting pathways larval dispersal, settlement, determining overall spatial footprint restoration outcomes. Spatial parameterisation coralseed v1.1.0 individual-based, functions tracking larvae along dispersal paths identifying whether trajectories intersect suitable habitat settlement. coralseed model employs detailed spatial tracking individual coral larvae release point potential settlement sites. accepts dispersal path data XY coordinates provided simple features (sf) POINT geometry format (see Table 1 example). approach allows larva uniquely tracked using ‘id’, spatial positions (‘geometry’) captured discrete temporal intervals (‘time’). Input data flexibility significant advantage coralseed, strict regular intervals input files mandatory. Instead, coralseed internally interpolates larval trajectories consistent timesteps—commonly set resolutions either 1 5 minutes—ensuring robust comparable outcomes across diverse input dispersal models. flexibility accommodates variability data availability observational frequency, making coralseed suitable integration various dispersal modelling frameworks (Figure 1a). Bounding box: xmin: 1629602 ymin: 8350374 xmax: 1630097 ymax: 8352354 Geometry type: POINT | Projected CRS: AGD84 / AMG zone 53 coralseed validated various particle tracking simulated data, CONNIE (CONNectivity InterfacE; Gouezo et al., 2025) oceanparcels (Ani et al., 2024), simulated within Great Barrier Reef. Given current constraints handling zarr data format (large N-dimensional typed arrays) within R, coralseed provides dedicated R functions specifically designed facilitate direct conversions oceanparcels outputs sf-compatible formats, ensuring accessibility usability across marine restoration projects. Predicting spatial patterns coral larval settlement requires accurate mapping benthic habitats determine suitable settlement locations. predict spatial patterns larval settlement, coralseed tracks particle paths across benthic substrates determine probability settlement based habitat electivity (Figure 1c). default habitat maps employed coralseed originate high-resolution Allen Coral Atlas (Lyons et al., 2024). However, model’s design allows integration vector-based habitat maps (e.g., Andréfouët & Bionaz, 2021), granting restoration practitioners flexibility apply region-specific updated habitat information may improve settlement predictions. coralseed v1.1.0, suitability substrates coral settlement assessed using two-step procedure: Exclusion Non-Colonisable Substrates: step systematically removed substrates known unsuitable coral larval settlement, including microalgal mats, seagrass beds, sandy areas, coral/algae-dominated regions, rubble. Stratification Colonisable Substrates: remaining substrates classified according geomorphic habitat categories provided Allen Coral Atlas, allowing spatially explicit predictions settlement outcomes based habitat type. shallow lagoon  deep lagoon habitats explicitly excluded due high-sediment loading suboptimal habitats coral larval settlement. following geomorphic categories included: Back Reef Slope • Sheltered Reef Slope • Plateau  • Inner Reef Flat • Outer Reef Flat • Reef Slope • Reef Crest","code":"| id | time               | geometry                    | |----|--------------------|-----------------------------| | 0  | 16/12/2022 14:06   | POINT (1630092 8352332)     | | 0  | 16/12/2022 14:17   | POINT (1630036 8352300)     | | 0  | 16/12/2022 14:29   | POINT (1629975 8352271)     | | 0  | 16/12/2022 14:41   | POINT (1629906 8352243)     | | 0  | 16/12/2022 14:53   | POINT (1629821 8352205)     | | 0  | 16/12/2022 15:05   | POINT (1629739 8352121)     | | 0  | 16/12/2022 15:17   | POINT (1629697 8352018)     | | 0  | 16/12/2022 15:29   | POINT (1629665 8351921)     | | 0  | 16/12/2022 15:41   | POINT (1629646 8351828)     | | 0  | 16/12/2022 15:53   | POINT (1629634 8351736)     |"},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"dispersal-paths","dir":"Articles","previous_headings":"","what":"4.1.1 Dispersal paths","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed model employs detailed spatial tracking individual coral larvae release point potential settlement sites. accepts dispersal path data XY coordinates provided simple features (sf) POINT geometry format (see Table 1 example). approach allows larva uniquely tracked using ‘id’, spatial positions (‘geometry’) captured discrete temporal intervals (‘time’). Input data flexibility significant advantage coralseed, strict regular intervals input files mandatory. Instead, coralseed internally interpolates larval trajectories consistent timesteps—commonly set resolutions either 1 5 minutes—ensuring robust comparable outcomes across diverse input dispersal models. flexibility accommodates variability data availability observational frequency, making coralseed suitable integration various dispersal modelling frameworks (Figure 1a). Bounding box: xmin: 1629602 ymin: 8350374 xmax: 1630097 ymax: 8352354 Geometry type: POINT | Projected CRS: AGD84 / AMG zone 53 coralseed validated various particle tracking simulated data, CONNIE (CONNectivity InterfacE; Gouezo et al., 2025) oceanparcels (Ani et al., 2024), simulated within Great Barrier Reef. Given current constraints handling zarr data format (large N-dimensional typed arrays) within R, coralseed provides dedicated R functions specifically designed facilitate direct conversions oceanparcels outputs sf-compatible formats, ensuring accessibility usability across marine restoration projects.","code":"| id | time               | geometry                    | |----|--------------------|-----------------------------| | 0  | 16/12/2022 14:06   | POINT (1630092 8352332)     | | 0  | 16/12/2022 14:17   | POINT (1630036 8352300)     | | 0  | 16/12/2022 14:29   | POINT (1629975 8352271)     | | 0  | 16/12/2022 14:41   | POINT (1629906 8352243)     | | 0  | 16/12/2022 14:53   | POINT (1629821 8352205)     | | 0  | 16/12/2022 15:05   | POINT (1629739 8352121)     | | 0  | 16/12/2022 15:17   | POINT (1629697 8352018)     | | 0  | 16/12/2022 15:29   | POINT (1629665 8351921)     | | 0  | 16/12/2022 15:41   | POINT (1629646 8351828)     | | 0  | 16/12/2022 15:53   | POINT (1629634 8351736)     |"},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"seascape-maps","dir":"Articles","previous_headings":"","what":"4.1.2 Seascape maps","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Predicting spatial patterns coral larval settlement requires accurate mapping benthic habitats determine suitable settlement locations. predict spatial patterns larval settlement, coralseed tracks particle paths across benthic substrates determine probability settlement based habitat electivity (Figure 1c). default habitat maps employed coralseed originate high-resolution Allen Coral Atlas (Lyons et al., 2024). However, model’s design allows integration vector-based habitat maps (e.g., Andréfouët & Bionaz, 2021), granting restoration practitioners flexibility apply region-specific updated habitat information may improve settlement predictions. coralseed v1.1.0, suitability substrates coral settlement assessed using two-step procedure: Exclusion Non-Colonisable Substrates: step systematically removed substrates known unsuitable coral larval settlement, including microalgal mats, seagrass beds, sandy areas, coral/algae-dominated regions, rubble. Stratification Colonisable Substrates: remaining substrates classified according geomorphic habitat categories provided Allen Coral Atlas, allowing spatially explicit predictions settlement outcomes based habitat type. shallow lagoon  deep lagoon habitats explicitly excluded due high-sediment loading suboptimal habitats coral larval settlement. following geomorphic categories included: Back Reef Slope • Sheltered Reef Slope • Plateau  • Inner Reef Flat • Outer Reef Flat • Reef Slope • Reef Crest","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"ecological-parameters","dir":"Articles","previous_headings":"","what":"4.2 Ecological parameters","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"larval phase corals benthic invertebrates (e.g., echinoderms, gastropods; Hadfield et al. 2015) consists pre-competent phase, development still underway larvae yet competent settle, competent phase, larvae capable settlement suitable substrates present (e.g., Connolly & Baird 2010, Randall et al. 2024). modelling larval reseeding potential, understanding short-term (hourly) patterns larval competency critical. larvae settle immediately following larval release (<1-2 hours), spatial footprint restoration efforts small scale (<100 m) concentrated (high densities settlers). larval competency peaks 6-12 hours release, spatial footprint larger scale (>1 km) diffuse. Understanding fine-scale patterns larval competency allows complex larval deliveries leveraging slack current conditions increase larval settlement densities reduced dispersal footprints following larval reseeding efforts. larval reseeding programs, larvae cultured aquaculture facilities land (e.g., Edwards et al. 2015, Pollock et al. 2017, dela Cruz & Harrison 2017, Severati et al. 2024) sea (e.g., Heyward et al. 2002, Omori et al. 2007, Doropoulos et al. 2019) held reach optimal competency. Optimal competency typically determined ) adding n larvae inducer quantifying proportion settled 10-24 hours, ii) adding settlement substrata larval cultures quantifying proportion larvae settle 24-hours. Competency assays repeated daily larvae released onto target reef area peak competency, typically targeted >50% cohort, maximise impact larval reseeding. metric “competency” defined experimentally different ways. Typically, subsets larvae cultures counted added conditioned tiles / crustose coralline algae fragments assayed 24-hours later (e.g., Heyward & Negri 1999, Connolly & Baird 2010), proportion settled/metamorphosed, swimming “dead” larvae recorded. coral larvae undergo peak competency days fertilisation, assays critical understanding settlement dynamics used estimating dispersal potential (e.g., Connolly & Baird 2010) parameterise large-scale ecosystem models include larval connectivity estimates (e.g., Condie et al 2021, Gouezo et al. 2021, Bozec et al. 2022) coralseed defines competency duration time larval release settlement (perspective larvae n days old following fertilisation) align propagule reseeding approach utilised restoration operations. definition differs traditional studies larval competency (e.g. Heyward & Negri 1999, Connolly & Baird 2010) derive larval competency proportion n larvae settling 24-hour period across multiple days. distinction important, coralseed models competency continuous individual-based measures within single cohort using hourly measurements, traditional studies (dispersal models, e.g. Ani et al 2024) define discrete (daily) timesteps across multiple cohorts. parameterise coralseed, conducted two separate competency assays: 1) using single-species (Acropora tenuis) laboratory-reared culture SeaSim (Australian Institute Marine Science, Townsville) November 2022, 2) using multi-species larvae harvested wild slicks collected northern Great Barrier Reef Lizard Island December 2022. experiments tracked settlement replicated cohorts larvae (n=100 per replicate) hourly timepoints (either 0 24-hours SeaSims 0 12-hours wild spawn). Five replicate pre-conditioned settlement tiles placed individual 1-litre flow-aquaria simulate natural conditions, 100 larvae released container t0, beginning 3.5 days following spawning SeaSims 4.5 days following spawning Lizard Island. Tiles imaged hourly following larval release using high-resolution camera (Sony a7R IV) -water probe lens (Laowa 24mm) t0-6 hours ~t10 hours. proportion larvae able settle time quantified tracking individual attachment subsequent metamorphosis larvae tiles time point. Results wild lab cultured larvae similar initial settlement occurred within first 1-2 hours (10% 6% 2hrs respectively) slowed around 6-10 hours release (16% 20% respectively, Figure 1b). Settlement 10 hours averaged 10 - 30% total larvae, settlement continued experiments without reaching clear asymptote either end point. Predictions time--settlement parameterising dispersal models (105 - 106 larvae) obtained draws posterior brms model outputs. coralseed incorporates additional parameter extrinsic mortality early dispersal/settlement stages accounts exogenous sources mortality otherwise unaccounted larval development planktivory (Fabricius et al 2004) entanglement/entrapment algal turfs (Birrell et al 2005). parameter independent intrinsic mortality (.e. genetic deformities, fertilisation defects) inherent parameterisation time--competency curves based experimental data (see 3.2.1). Given complexities magnitude shape distribution, extrinsic mortality coralseed v1.1.0 parameterised approximate classic survival curves (.e., Type , Type II, Type III survival, sensu Odum 1953): • Type survivorship: high age-specific survival probability early middle dispersal, followed increasing mortality rapid decline survival late-stage dispersal. • Type II survivorship: constant mortality time fixed probability survival • Type III survivorship: high mortality early stages low rates mortality high probability survival late-stage dispersal, typical marine invertebrate larvae.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"larval-competency","dir":"Articles","previous_headings":"","what":"4.2.1 Larval competency","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"larval phase corals benthic invertebrates (e.g., echinoderms, gastropods; Hadfield et al. 2015) consists pre-competent phase, development still underway larvae yet competent settle, competent phase, larvae capable settlement suitable substrates present (e.g., Connolly & Baird 2010, Randall et al. 2024). modelling larval reseeding potential, understanding short-term (hourly) patterns larval competency critical. larvae settle immediately following larval release (<1-2 hours), spatial footprint restoration efforts small scale (<100 m) concentrated (high densities settlers). larval competency peaks 6-12 hours release, spatial footprint larger scale (>1 km) diffuse. Understanding fine-scale patterns larval competency allows complex larval deliveries leveraging slack current conditions increase larval settlement densities reduced dispersal footprints following larval reseeding efforts. larval reseeding programs, larvae cultured aquaculture facilities land (e.g., Edwards et al. 2015, Pollock et al. 2017, dela Cruz & Harrison 2017, Severati et al. 2024) sea (e.g., Heyward et al. 2002, Omori et al. 2007, Doropoulos et al. 2019) held reach optimal competency. Optimal competency typically determined ) adding n larvae inducer quantifying proportion settled 10-24 hours, ii) adding settlement substrata larval cultures quantifying proportion larvae settle 24-hours. Competency assays repeated daily larvae released onto target reef area peak competency, typically targeted >50% cohort, maximise impact larval reseeding. metric “competency” defined experimentally different ways. Typically, subsets larvae cultures counted added conditioned tiles / crustose coralline algae fragments assayed 24-hours later (e.g., Heyward & Negri 1999, Connolly & Baird 2010), proportion settled/metamorphosed, swimming “dead” larvae recorded. coral larvae undergo peak competency days fertilisation, assays critical understanding settlement dynamics used estimating dispersal potential (e.g., Connolly & Baird 2010) parameterise large-scale ecosystem models include larval connectivity estimates (e.g., Condie et al 2021, Gouezo et al. 2021, Bozec et al. 2022) coralseed defines competency duration time larval release settlement (perspective larvae n days old following fertilisation) align propagule reseeding approach utilised restoration operations. definition differs traditional studies larval competency (e.g. Heyward & Negri 1999, Connolly & Baird 2010) derive larval competency proportion n larvae settling 24-hour period across multiple days. distinction important, coralseed models competency continuous individual-based measures within single cohort using hourly measurements, traditional studies (dispersal models, e.g. Ani et al 2024) define discrete (daily) timesteps across multiple cohorts. parameterise coralseed, conducted two separate competency assays: 1) using single-species (Acropora tenuis) laboratory-reared culture SeaSim (Australian Institute Marine Science, Townsville) November 2022, 2) using multi-species larvae harvested wild slicks collected northern Great Barrier Reef Lizard Island December 2022. experiments tracked settlement replicated cohorts larvae (n=100 per replicate) hourly timepoints (either 0 24-hours SeaSims 0 12-hours wild spawn). Five replicate pre-conditioned settlement tiles placed individual 1-litre flow-aquaria simulate natural conditions, 100 larvae released container t0, beginning 3.5 days following spawning SeaSims 4.5 days following spawning Lizard Island. Tiles imaged hourly following larval release using high-resolution camera (Sony a7R IV) -water probe lens (Laowa 24mm) t0-6 hours ~t10 hours. proportion larvae able settle time quantified tracking individual attachment subsequent metamorphosis larvae tiles time point. Results wild lab cultured larvae similar initial settlement occurred within first 1-2 hours (10% 6% 2hrs respectively) slowed around 6-10 hours release (16% 20% respectively, Figure 1b). Settlement 10 hours averaged 10 - 30% total larvae, settlement continued experiments without reaching clear asymptote either end point. Predictions time--settlement parameterising dispersal models (105 - 106 larvae) obtained draws posterior brms model outputs.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"larval-mortality","dir":"Articles","previous_headings":"","what":"4.2.2 Larval mortality","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed incorporates additional parameter extrinsic mortality early dispersal/settlement stages accounts exogenous sources mortality otherwise unaccounted larval development planktivory (Fabricius et al 2004) entanglement/entrapment algal turfs (Birrell et al 2005). parameter independent intrinsic mortality (.e. genetic deformities, fertilisation defects) inherent parameterisation time--competency curves based experimental data (see 3.2.1). Given complexities magnitude shape distribution, extrinsic mortality coralseed v1.1.0 parameterised approximate classic survival curves (.e., Type , Type II, Type III survival, sensu Odum 1953): • Type survivorship: high age-specific survival probability early middle dispersal, followed increasing mortality rapid decline survival late-stage dispersal. • Type II survivorship: constant mortality time fixed probability survival • Type III survivorship: high mortality early stages low rates mortality high probability survival late-stage dispersal, typical marine invertebrate larvae.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"habitat-electivity","dir":"Articles","previous_headings":"","what":"4.2.3 Habitat electivity","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"selection habitats coral larvae settlement key determining growth survival adult life-history stage (Price 2010). laboratory experiments, coral larvae respond specific biotic settlement cues substrates dominated early successional crustose coralline algae (Harrington et al. 2004, Abdul Wahab et al 2023) microbial biofilms associated optimal shallow-water settlement habitats (Webster 2004), avoiding habitats negative outcomes long-turf algae, sponges, ascidians (Wakwella et al 2020). patterns consistent large-scale field assessments coral settlement, general pattern higher coral settlement rates forereef reef slope areas compared backreef reef flat locations (Baird & Hughes 1997, Arnold et al 2010, Doropoulos et al. 2015). coralseed v0.1.1 uses data settlement tiles Lizard Island (Baird Hughes 1998, Baird 2001) publications Great Barrier Reef (Harriot 1985, Mundy & Babcock 1998, Baird 2001, Baird et al 2003, Doropoulos et al 2015) parameterise settlement probability across different habitat types derived Allen Coral atlas spatial maps (section 3.1.2) P=1 absolute settlement P=0 settlement: “Reef Crest” - high settlement probability (P = 0.9 ± 0.1) “Reef Slope” - high settlement probability (P = 0.9 ± 0.1) “Sheltered Reef Slope” - lower exposed habitats (P = 0.7 ± 0.1) “Back Reef Slope” - lower sheltered slope habitats (P = 0.6 ± 0.1) “Outer Reef Flat” - half settlement reef crest/slope (P = 0.45 ± 0.1) “Inner Reef Flat” - senescent habitat, low settlement potential (P = 0.3 ± 0.1) “Plateau” - deep (>10m) habitat, low probability settlement (P = 0.2 ± 0.1) Habitat-specific settlement probabilities used parameterise spatial maps sampling normal distribution mean (± standard error) probability (Figure 1C).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"settlement-probability","dir":"Articles","previous_headings":"","what":"4.2.4 Settlement probability","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"determine settlement, coralseed model takes individual particle paths maps settlement probability id according habitats encountered along trajectory. Note probability settlement probability settlement larvae competent (see 4.1.4 details). two caveats determining larval settlement currently implemented coralseed: Larval “attraction”: coralseed account chemical cues habitats positive (negative) settlement cues may cause larvae selectively swim towards (away ) area settlement (see Dixson et al 2014). dispersal models include “halo” around reefs particles pass , larvae allocated reef (e.g., Hock et al. 2019), practice hard implement ) particle tracks hard-wired, spatial buffers can used identify habitats within given distance, forcing settlement p=1 difficult using anything rapid algorithm produces unrealistic results, ii) lab experiments demonstrate substrate electivity, capacity larvae physically swim currents ecologically relevant scales debatable (see Hata et al 2017), iii) paper attempting validate field settings (Dixson et al 2014) retracted. Benthic boundary layers: coralseed assumes larvae free flowing currents doesn’t account “sticky” benthic boundary conditions (Jumars & Nowell 1984). development version coralseed slows larvae 3-fold p=1 larvae pass across reef substrates simulate “searching” behaviour, far ) difficult implement ii) difficult parameterise due lack data.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-model-workflow-v1-1-0","dir":"Articles","previous_headings":"","what":"5. coralseed model workflow (v1.1.0)","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Figure 2 Workflow coralseed model parameterised inputs italic, functions (), summarised model outputs returned function. coralseed simulates larval seeding tracking larvae along dispersal paths identifying whether trajectories intersect suitable habitat settlement. number input dispersal paths equal number simulated larvae, coralseed can run iteratively multiple (.e. 10,000 paths * 100 simulations = 1,000,000 simulated larvae). seed_particles() split three sections: predict_competency() – along particle tracks larvae become ready settle? 2) simulate_mortality() – proportion larvae lost extrinsic mortality (e.g. predation, entrapment)? h habitat_electivity() – larvae pass suitable habitats, probability settling? One approach modelling time-censored data survival analysis, explicitly considers time--event outcomes (Efron 1988). Applying approach settlement experiment, survival analysis becomes “time--settlement” rather “time--death”. experimental time point can considered census 100-n larvae initial starting pool, individuals undergoing binary transition swimming larvae = “0” settled larvae = “1”. coralseed uses three parameterisations time--event models brms allow flexibility input data types. survival function S(t) represents probability event interest (e.g., settlement failure) occurred time t. words, gives probability surviving past time t. estimate probability settlement time, settlement data outlined section 3.2.1 fit Bayesian discrete-time survival model brms either ) exponential, ii) Weibull, iii) lognormal distributions, resulting posterior distributions parameters accounts -replicate variability multilevel framework: Exponential distribution survival function exponential distribution given \\[ S(t) = \\exp(-\\lambda t) \\] λ rate parameter. competency probability time t can derived survival function, time competency modeled T ~ Exponential(- λ) , λ estimated data. Weibull distribution survival function Weibull distribution \\[ S(t) = \\exp\\left( - \\left( \\frac{t}{\\beta} \\right)^\\alpha \\right) \\] α shape parameter β scale parameter. shape parameter α allows hazard rate either increase decrease time, depending value. α = 1, Weibull model reduces exponential model. time competency modeled T ~ Weibull(- α,β) , α β estimated data. Lognormal distribution lognormal family assumes log survival time follows normal distribution, allowing non-constant hazard rate can initially increase decrease time. survival function \\[ S(t) = 1 - \\Phi\\left( \\frac{\\log(t) - \\mu}{\\sigma} \\right) \\] μ mean σ standard deviation log-transformed survival time. , Φ represents cumulative distribution function standard normal distribution. time competency modeled \\[ T \\sim \\mathrm{Lognormal}(\\mu, \\sigma) \\] μ σ estimated data. Given lognormal distribution parameters μ (mean log-transformed time) σ (standard deviation log-transformed time), survival function S(t) time t defined \\[ S(t) = 1 - \\Phi\\left( \\frac{\\log(t) - \\mu}{\\sigma} \\right), \\quad \\frac{\\log(t) - \\mu}{\\sigma} \\] \\[ \\frac{\\log(t) - \\mu}{\\sigma} \\] represents natural logarithm time--event,μ mean log scale, σ standard deviation log scale. term \\[ \\frac{\\log(t) - \\mu}{\\sigma} \\, \\sigma \\] standardizes log-transformed time t, converting standard normal variable. function Φ CDF standard normal distribution, gives probability standard normal variable less equal given value. coralseed, extrinsic mortality (see section 3.2.2) parameterised first determining proportion larvae removed 24-hour time-period following larval release. timing mortality within assigned cohort determined using Weibull probability density function \\[ P(t) = \\frac{\\alpha}{\\beta} \\left( \\frac{t}{\\beta} \\right)^{\\alpha - 1} \\exp\\left( - \\left( \\frac{t}{\\beta} \\right)^\\alpha \\right) \\] e eulers number, t time (24hr period following release). scale (α) shape (β) parameters varied approximate Type – III mortality (Figure 1c) timing mortality simulated individual larvae. shape scale parameters intuitive set, current version coralseed keeps mortality fixed three survival curve types can changed accept variable parameters different distributions. Predictions time--settlement parameterising dispersal models (10^5 – 10^7 larvae) obtained draws posterior brms model outputs. probabilities used parameterise spatiotemporal trajectories transposing binary state (“competent” vs “competent”) particle tracks hydrodynamic models 2.1.1, rephrases question “larvae become competent?” “larvae space become competent time?”. coralseed spatially interpolates particle track 1 minute time-steps across trajectory randomly samples output Bayesian time--settlement model determine probabilistic competency point (time minutes following release) particle. Points connected form paths particle id according competency state time (either incompetent competent), paths overlaid upon habitat maps determine probability settlement. Probability settlement determined habitat electivity, takes underlying habitat maps (2.1.1) substrate electivity (3.2.3) determine probability settlement timestep, drawn normal distribution around mean standard error. coralseed uses multiplicative probabilistic approach determine settlement along particle trajectory timepoint, competence defined following survival function 4.1.1, electivity following habitat electivity encountering suitable habitat (4.1.3), mortality (either 0 1) dependent probability individuals experiencing extrinsic mortality (4.1.2), .e. \\[ \\begin{aligned} P_{\\text{settlement}}(t_0) &= P_{\\text{competence}}(t_0) \\times P_{\\text{electivity}}(t_0) \\times P_{\\text{mortality}}(t_0) \\\\\\\\ P_{\\text{settlement}}(t_1) &= P_{\\text{competence}}(t_1) \\times P_{\\text{electivity}}(t_1) \\times P_{\\text{mortality}}(t_1) \\\\\\\\ &\\vdots \\\\\\\\ P_{\\text{settlement}}(t_n) &= P_{\\text{competence}}(t_n) \\times P_{\\text{electivity}}(t_n) \\times P_{\\text{mortality}}(t_n) \\end{aligned} \\] competent larva passes suitable habitat settlement, coralseed calculates probability settlement time-step additive multiplicative: larvae probability settlement every time-step whether remain within habitat 5 minutes 30 minutes. Spatially, coralseed allows three different approaches larval settlement: “additive” (p=1 larvae competent, larvae settle somewhere habitat along particle trajectory), “lagged” (p=1 larvae competent, larvae settle somewhere habitat first 10 minutes), “rapid” (p=1 larvae competent, larvae settle immediately entering habitat). larvae competent settle somewhere habitat p=1. “rapid” produce unrealistic results larvae immediately settle borders habitats. “lagged” probably realistic, given habitats relatively small size (seascapes spatially complex) larvae pass habitats rapidly, either “lagged” “additive” produce robust results. output coralseed (settlement points particle paths) can used quantify summary statistics spatial patterns, allowing comparisons sites tidal cycles/days/years. settlement_statistics() coralseed v1.1.0 includes: Individual based summary statistics: ) total number larvae settled, ii) proportion released larvae settled, iii) median time settlement, iv) median distance travelled. Spatial statistics: dispersal footprint (total area larval settlement based concave hull settlement points), settlement density (settlers per m2), maximum settlement density (settlers per m2), spatial clustering settlers (Nearest-neighbour distance, Clark-Evans distance, sum squared distances around mean). summary statistics can used answer basic questions larval reseeding: proportion larvae settled initial reseeding number? long average take larvae settle? far larvae travel settling? area larvae settle? maximum density settlers? clustered settled larvae space? flowchart_coralseed() function generates interactive Sankey diagram visualizes fate coral larvae dispersal settlement simulations. takes two inputs: seed_particles() object (4.1) settle_particles() object (4.2), along optional multiplier scale larval numbers set post-settlement survival rate. function calculates total larvae released, settled, dispersed, dead, optional user-set estimate post-settlement mortality proportion total settlers. builds set labelled nodes weighted links represent larval transitions renders Sankey flow diagram using networkD3, customized colours, font, node spacing, caption summarizing key parameters like total particles maximum dispersal time. map_coralseed() function generates detailed interactive leaflet map visualizing coral larval dispersal paths, settlement locations, settlement density, seascape habitats, restoration footprint. map_coralseed() takes seed_particles() particle tracks, settle_particles() settlement points paths, seascape_probability() habitat layers, flexible options show time competency-based dispersal tracks, spatial footprints, density heatmaps, settlement grids. Particles processed show tracks timed intervals, settlement locations mapped dispersal time bins, multiple layers can toggled interactively. final map uses tmap leaflet create fully explorable, web-based viewer allowing multiple vector raster overlays, satellite imagery, summary statistics (e.g. grids spatial footprint). map_coralseed() WebGL (GPU-accelerated canvas drawing) compatible via tmap allowing browsers handle large coralseed simulations tens thousands features high-resolution grids smoothly interactively, without crashing, lagging, freezing. animate_coralseed() function generates animation coral larval dispersal paths, settlement location, seascape habitats animate_coralseed() function creates animated .gif visualizing coral larval particle tracks time using tmap package. accepts sf object input containing spatial particle data time id columns, generates sequential frames grouping points timestamp. frame shows spatial distribution particles specific moment, allowing time-resolved animation dispersal. Users can control output’s filename, dimensions, frame delay, looping behavior. function returns animation object saving disk.","code":"time | cens(1 - settled) ~ (1 | w | tile)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"seed_particles","dir":"Articles","previous_headings":"","what":"5.1 seed_particles()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed simulates larval seeding tracking larvae along dispersal paths identifying whether trajectories intersect suitable habitat settlement. number input dispersal paths equal number simulated larvae, coralseed can run iteratively multiple (.e. 10,000 paths * 100 simulations = 1,000,000 simulated larvae). seed_particles() split three sections: predict_competency() – along particle tracks larvae become ready settle? 2) simulate_mortality() – proportion larvae lost extrinsic mortality (e.g. predation, entrapment)? h habitat_electivity() – larvae pass suitable habitats, probability settling? One approach modelling time-censored data survival analysis, explicitly considers time--event outcomes (Efron 1988). Applying approach settlement experiment, survival analysis becomes “time--settlement” rather “time--death”. experimental time point can considered census 100-n larvae initial starting pool, individuals undergoing binary transition swimming larvae = “0” settled larvae = “1”. coralseed uses three parameterisations time--event models brms allow flexibility input data types. survival function S(t) represents probability event interest (e.g., settlement failure) occurred time t. words, gives probability surviving past time t. estimate probability settlement time, settlement data outlined section 3.2.1 fit Bayesian discrete-time survival model brms either ) exponential, ii) Weibull, iii) lognormal distributions, resulting posterior distributions parameters accounts -replicate variability multilevel framework: Exponential distribution survival function exponential distribution given \\[ S(t) = \\exp(-\\lambda t) \\] λ rate parameter. competency probability time t can derived survival function, time competency modeled T ~ Exponential(- λ) , λ estimated data. Weibull distribution survival function Weibull distribution \\[ S(t) = \\exp\\left( - \\left( \\frac{t}{\\beta} \\right)^\\alpha \\right) \\] α shape parameter β scale parameter. shape parameter α allows hazard rate either increase decrease time, depending value. α = 1, Weibull model reduces exponential model. time competency modeled T ~ Weibull(- α,β) , α β estimated data. Lognormal distribution lognormal family assumes log survival time follows normal distribution, allowing non-constant hazard rate can initially increase decrease time. survival function \\[ S(t) = 1 - \\Phi\\left( \\frac{\\log(t) - \\mu}{\\sigma} \\right) \\] μ mean σ standard deviation log-transformed survival time. , Φ represents cumulative distribution function standard normal distribution. time competency modeled \\[ T \\sim \\mathrm{Lognormal}(\\mu, \\sigma) \\] μ σ estimated data. Given lognormal distribution parameters μ (mean log-transformed time) σ (standard deviation log-transformed time), survival function S(t) time t defined \\[ S(t) = 1 - \\Phi\\left( \\frac{\\log(t) - \\mu}{\\sigma} \\right), \\quad \\frac{\\log(t) - \\mu}{\\sigma} \\] \\[ \\frac{\\log(t) - \\mu}{\\sigma} \\] represents natural logarithm time--event,μ mean log scale, σ standard deviation log scale. term \\[ \\frac{\\log(t) - \\mu}{\\sigma} \\, \\sigma \\] standardizes log-transformed time t, converting standard normal variable. function Φ CDF standard normal distribution, gives probability standard normal variable less equal given value. coralseed, extrinsic mortality (see section 3.2.2) parameterised first determining proportion larvae removed 24-hour time-period following larval release. timing mortality within assigned cohort determined using Weibull probability density function \\[ P(t) = \\frac{\\alpha}{\\beta} \\left( \\frac{t}{\\beta} \\right)^{\\alpha - 1} \\exp\\left( - \\left( \\frac{t}{\\beta} \\right)^\\alpha \\right) \\] e eulers number, t time (24hr period following release). scale (α) shape (β) parameters varied approximate Type – III mortality (Figure 1c) timing mortality simulated individual larvae. shape scale parameters intuitive set, current version coralseed keeps mortality fixed three survival curve types can changed accept variable parameters different distributions. Predictions time--settlement parameterising dispersal models (10^5 – 10^7 larvae) obtained draws posterior brms model outputs. probabilities used parameterise spatiotemporal trajectories transposing binary state (“competent” vs “competent”) particle tracks hydrodynamic models 2.1.1, rephrases question “larvae become competent?” “larvae space become competent time?”. coralseed spatially interpolates particle track 1 minute time-steps across trajectory randomly samples output Bayesian time--settlement model determine probabilistic competency point (time minutes following release) particle. Points connected form paths particle id according competency state time (either incompetent competent), paths overlaid upon habitat maps determine probability settlement. Probability settlement determined habitat electivity, takes underlying habitat maps (2.1.1) substrate electivity (3.2.3) determine probability settlement timestep, drawn normal distribution around mean standard error.","code":"time | cens(1 - settled) ~ (1 | w | tile)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"simulating-mortality-simulate_mortality","dir":"Articles","previous_headings":"","what":"5.1.2 Simulating mortality (simulate_mortality())","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed, extrinsic mortality (see section 3.2.2) parameterised first determining proportion larvae removed 24-hour time-period following larval release. timing mortality within assigned cohort determined using Weibull probability density function \\[ P(t) = \\frac{\\alpha}{\\beta} \\left( \\frac{t}{\\beta} \\right)^{\\alpha - 1} \\exp\\left( - \\left( \\frac{t}{\\beta} \\right)^\\alpha \\right) \\] e eulers number, t time (24hr period following release). scale (α) shape (β) parameters varied approximate Type – III mortality (Figure 1c) timing mortality simulated individual larvae. shape scale parameters intuitive set, current version coralseed keeps mortality fixed three survival curve types can changed accept variable parameters different distributions.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"predict_electivity","dir":"Articles","previous_headings":"","what":"5.1.3 predict_electivity()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Predictions time--settlement parameterising dispersal models (10^5 – 10^7 larvae) obtained draws posterior brms model outputs. probabilities used parameterise spatiotemporal trajectories transposing binary state (“competent” vs “competent”) particle tracks hydrodynamic models 2.1.1, rephrases question “larvae become competent?” “larvae space become competent time?”. coralseed spatially interpolates particle track 1 minute time-steps across trajectory randomly samples output Bayesian time--settlement model determine probabilistic competency point (time minutes following release) particle. Points connected form paths particle id according competency state time (either incompetent competent), paths overlaid upon habitat maps determine probability settlement. Probability settlement determined habitat electivity, takes underlying habitat maps (2.1.1) substrate electivity (3.2.3) determine probability settlement timestep, drawn normal distribution around mean standard error.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"settle_particles","dir":"Articles","previous_headings":"","what":"5.2 settle_particles()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"coralseed uses multiplicative probabilistic approach determine settlement along particle trajectory timepoint, competence defined following survival function 4.1.1, electivity following habitat electivity encountering suitable habitat (4.1.3), mortality (either 0 1) dependent probability individuals experiencing extrinsic mortality (4.1.2), .e. \\[ \\begin{aligned} P_{\\text{settlement}}(t_0) &= P_{\\text{competence}}(t_0) \\times P_{\\text{electivity}}(t_0) \\times P_{\\text{mortality}}(t_0) \\\\\\\\ P_{\\text{settlement}}(t_1) &= P_{\\text{competence}}(t_1) \\times P_{\\text{electivity}}(t_1) \\times P_{\\text{mortality}}(t_1) \\\\\\\\ &\\vdots \\\\\\\\ P_{\\text{settlement}}(t_n) &= P_{\\text{competence}}(t_n) \\times P_{\\text{electivity}}(t_n) \\times P_{\\text{mortality}}(t_n) \\end{aligned} \\] competent larva passes suitable habitat settlement, coralseed calculates probability settlement time-step additive multiplicative: larvae probability settlement every time-step whether remain within habitat 5 minutes 30 minutes. Spatially, coralseed allows three different approaches larval settlement: “additive” (p=1 larvae competent, larvae settle somewhere habitat along particle trajectory), “lagged” (p=1 larvae competent, larvae settle somewhere habitat first 10 minutes), “rapid” (p=1 larvae competent, larvae settle immediately entering habitat). larvae competent settle somewhere habitat p=1. “rapid” produce unrealistic results larvae immediately settle borders habitats. “lagged” probably realistic, given habitats relatively small size (seascapes spatially complex) larvae pass habitats rapidly, either “lagged” “additive” produce robust results.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"settlement_density","dir":"Articles","previous_headings":"","what":"5.3 settlement_density()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"output coralseed (settlement points particle paths) can used quantify summary statistics spatial patterns, allowing comparisons sites tidal cycles/days/years. settlement_statistics() coralseed v1.1.0 includes: Individual based summary statistics: ) total number larvae settled, ii) proportion released larvae settled, iii) median time settlement, iv) median distance travelled. Spatial statistics: dispersal footprint (total area larval settlement based concave hull settlement points), settlement density (settlers per m2), maximum settlement density (settlers per m2), spatial clustering settlers (Nearest-neighbour distance, Clark-Evans distance, sum squared distances around mean). summary statistics can used answer basic questions larval reseeding: proportion larvae settled initial reseeding number? long average take larvae settle? far larvae travel settling? area larvae settle? maximum density settlers? clustered settled larvae space?","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"settlement_statistics","dir":"Articles","previous_headings":"","what":"5.3.1 settlement_statistics()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"output coralseed (settlement points particle paths) can used quantify summary statistics spatial patterns, allowing comparisons sites tidal cycles/days/years. settlement_statistics() coralseed v1.1.0 includes: Individual based summary statistics: ) total number larvae settled, ii) proportion released larvae settled, iii) median time settlement, iv) median distance travelled. Spatial statistics: dispersal footprint (total area larval settlement based concave hull settlement points), settlement density (settlers per m2), maximum settlement density (settlers per m2), spatial clustering settlers (Nearest-neighbour distance, Clark-Evans distance, sum squared distances around mean). summary statistics can used answer basic questions larval reseeding: proportion larvae settled initial reseeding number? long average take larvae settle? far larvae travel settling? area larvae settle? maximum density settlers? clustered settled larvae space?","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"coralseed-outputs","dir":"Articles","previous_headings":"","what":"5.4 coralseed outputs","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"flowchart_coralseed() function generates interactive Sankey diagram visualizes fate coral larvae dispersal settlement simulations. takes two inputs: seed_particles() object (4.1) settle_particles() object (4.2), along optional multiplier scale larval numbers set post-settlement survival rate. function calculates total larvae released, settled, dispersed, dead, optional user-set estimate post-settlement mortality proportion total settlers. builds set labelled nodes weighted links represent larval transitions renders Sankey flow diagram using networkD3, customized colours, font, node spacing, caption summarizing key parameters like total particles maximum dispersal time. map_coralseed() function generates detailed interactive leaflet map visualizing coral larval dispersal paths, settlement locations, settlement density, seascape habitats, restoration footprint. map_coralseed() takes seed_particles() particle tracks, settle_particles() settlement points paths, seascape_probability() habitat layers, flexible options show time competency-based dispersal tracks, spatial footprints, density heatmaps, settlement grids. Particles processed show tracks timed intervals, settlement locations mapped dispersal time bins, multiple layers can toggled interactively. final map uses tmap leaflet create fully explorable, web-based viewer allowing multiple vector raster overlays, satellite imagery, summary statistics (e.g. grids spatial footprint). map_coralseed() WebGL (GPU-accelerated canvas drawing) compatible via tmap allowing browsers handle large coralseed simulations tens thousands features high-resolution grids smoothly interactively, without crashing, lagging, freezing. animate_coralseed() function generates animation coral larval dispersal paths, settlement location, seascape habitats animate_coralseed() function creates animated .gif visualizing coral larval particle tracks time using tmap package. accepts sf object input containing spatial particle data time id columns, generates sequential frames grouping points timestamp. frame shows spatial distribution particles specific moment, allowing time-resolved animation dispersal. Users can control output’s filename, dimensions, frame delay, looping behavior. function returns animation object saving disk.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"flowchart_coralseed","dir":"Articles","previous_headings":"","what":"5.4.1 flowchart_coralseed()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"flowchart_coralseed() function generates interactive Sankey diagram visualizes fate coral larvae dispersal settlement simulations. takes two inputs: seed_particles() object (4.1) settle_particles() object (4.2), along optional multiplier scale larval numbers set post-settlement survival rate. function calculates total larvae released, settled, dispersed, dead, optional user-set estimate post-settlement mortality proportion total settlers. builds set labelled nodes weighted links represent larval transitions renders Sankey flow diagram using networkD3, customized colours, font, node spacing, caption summarizing key parameters like total particles maximum dispersal time.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"map_coralseed","dir":"Articles","previous_headings":"","what":"5.4.2 map_coralseed()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"map_coralseed() function generates detailed interactive leaflet map visualizing coral larval dispersal paths, settlement locations, settlement density, seascape habitats, restoration footprint. map_coralseed() takes seed_particles() particle tracks, settle_particles() settlement points paths, seascape_probability() habitat layers, flexible options show time competency-based dispersal tracks, spatial footprints, density heatmaps, settlement grids. Particles processed show tracks timed intervals, settlement locations mapped dispersal time bins, multiple layers can toggled interactively. final map uses tmap leaflet create fully explorable, web-based viewer allowing multiple vector raster overlays, satellite imagery, summary statistics (e.g. grids spatial footprint). map_coralseed() WebGL (GPU-accelerated canvas drawing) compatible via tmap allowing browsers handle large coralseed simulations tens thousands features high-resolution grids smoothly interactively, without crashing, lagging, freezing.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"animate_coralseed","dir":"Articles","previous_headings":"","what":"5.4.3 animate_coralseed()","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"animate_coralseed() function generates animation coral larval dispersal paths, settlement location, seascape habitats animate_coralseed() function creates animated .gif visualizing coral larval particle tracks time using tmap package. accepts sf object input containing spatial particle data time id columns, generates sequential frames grouping points timestamp. frame shows spatial distribution particles specific moment, allowing time-resolved animation dispersal. Users can control output’s filename, dimensions, frame delay, looping behavior. function returns animation object saving disk.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"examples-of-coralseed-in-restoration-planning","dir":"Articles","previous_headings":"","what":"6. Examples of coralseed in restoration planning","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"two examples coralseed restoration planning Great Barrier Reef based two dispersal scenarios Lizard Island (using CONNIE , Gouezo et al 2025) Moore Reef (using OceanParcels, Ani et al 2024). Note simulations demonstrative examples use coralseed model outputs intended operational examples. Reproducible results, data inputs, model parameterisation available full https://github.com/marine-ecologist/%60coralseed%60/  Figure 3 ) Simulated settlement following larval release high retention site Lizard Island, 37% settlement rate 500 simulated larvae within 100 m release site within first 12 hours (red box = 100 x 100m plot), b) inset particle tracks time settlement, c) DBSCAN clustering points identifying hotspot locations outer reef flat, d) heatmap peak densities estimating benchmarking restoration outcomes. Fine-scale dispersal modelling represents key tool scaling larval-based reef restoration, recent high-resolution modelling (~30-m resolution) Lizard Island (northern Great Barrier Reef) identifying optimal locations high particle residence time can enhance local settlement (Gouezo et al 2025). coralseed model run using 500 tracks dispersal model simulation 2021 following November mass spawning event simulating particle release reef slope Palfrey South Island Lizard Reef (Figure 3a). predicted dispersal model, particle retention high within first 12 hours, coralseed predicting 37% settlement larvae (186/500) within 100 m release site following north-easterly dispersal reef slope outer reef flat (Figure 3a). tracking individual particles, coralseed resolves diverging dispersal pathways towards northerly easterly trajectories (Figure 3b), overall spatial footprint 3,618 m2 concentrated reef slope ~6 hours following dispersal. running clustering algorithm settlement points (DBSCAN, Density-based Spatial Clustering Applications Noise), outputs coralseed can used identify clusters settlement, driven increasing larval competency convergence dispersal paths 4-6 hours dispersal (Figure 4c). spatial planning purposes, heatmap outputs coralseed can used target expected settlement sites following release identify hotspots future monitoring validate restoration outcomes.  Figure 4 ) simulated dispersal settlement times particle releases Moore Reef, b) settlement densities (per m2) within 50x50m grid cells across settlement footprint, c) flowchat_coralseed() outputs fate larval release, d) inset high density settlement across back-reef patches. scale climate-driven disturbance increases frequency intensity, need large-scale restoration beyond local interventions increasingly important (Mulà et al 2025). leveraging ocean currents large-scale production coral larvae, larval reseeding strong potential regenerate large areas reef without need direct intervention involved deployment devices outplanting fragments (e.g. Suggett et al 2019, Waters et al 2025). Using regional hydrodynamic model (RECOM) output OceanParcels, coralseed can used make predictions large-scale dispersal release site low-retention high flow scenario. Based simulations Moore Reef (northern Great Barrier Reef) 2017 (Ani et al 2024), coralseed used simulated settlement dynamics 100k individual particle tracks (Figure 4a) across large distance (~4 km length reef) short time window (6 hours). High densities larval settlement observed particle tracks intersected reef habitat (Figure 4b), total 18% settlement initial release occurred within 6 hours. outputs settlement_densities() used map_coralseed() generate spatial grid across settlement footprint quantify mean settlement densities per m2 within gridcell. Settlement recorded across total 126 grid cells totalling 312,300 m2, mean density per 57 settlers per m2 maximum density 536 settlers per m2. output flowchat_coralseed() can used either summary tool reseeding process (Figure 4c), dynamic decision-making framework synthesise adjustments larvae release timing enhancing competency can influence overall success restoration outcomes. financial perspective, direct cost-estimate initial restoration effort can converted cost per “recruit” (US$ 0.08, Figure 4c) compared traditional restoration methods (e.g. US$2.34 per outplanted coral, Schmidt-Roach et al 2025). Refinement coralseed using fine-scale maps (Figure 4d) allows spatial optimisation long-distance dispersal across sites key interest (e.g. tourism hotspots degraded reef areas).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"high-retention-reseeding-lizard-island-northern-great-barrier-reef","dir":"Articles","previous_headings":"","what":"6.1 High-retention reseeding, Lizard Island (northern Great Barrier Reef)","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Figure 3 ) Simulated settlement following larval release high retention site Lizard Island, 37% settlement rate 500 simulated larvae within 100 m release site within first 12 hours (red box = 100 x 100m plot), b) inset particle tracks time settlement, c) DBSCAN clustering points identifying hotspot locations outer reef flat, d) heatmap peak densities estimating benchmarking restoration outcomes. Fine-scale dispersal modelling represents key tool scaling larval-based reef restoration, recent high-resolution modelling (~30-m resolution) Lizard Island (northern Great Barrier Reef) identifying optimal locations high particle residence time can enhance local settlement (Gouezo et al 2025). coralseed model run using 500 tracks dispersal model simulation 2021 following November mass spawning event simulating particle release reef slope Palfrey South Island Lizard Reef (Figure 3a). predicted dispersal model, particle retention high within first 12 hours, coralseed predicting 37% settlement larvae (186/500) within 100 m release site following north-easterly dispersal reef slope outer reef flat (Figure 3a). tracking individual particles, coralseed resolves diverging dispersal pathways towards northerly easterly trajectories (Figure 3b), overall spatial footprint 3,618 m2 concentrated reef slope ~6 hours following dispersal. running clustering algorithm settlement points (DBSCAN, Density-based Spatial Clustering Applications Noise), outputs coralseed can used identify clusters settlement, driven increasing larval competency convergence dispersal paths 4-6 hours dispersal (Figure 4c). spatial planning purposes, heatmap outputs coralseed can used target expected settlement sites following release identify hotspots future monitoring validate restoration outcomes.  Figure 4 ) simulated dispersal settlement times particle releases Moore Reef, b) settlement densities (per m2) within 50x50m grid cells across settlement footprint, c) flowchat_coralseed() outputs fate larval release, d) inset high density settlement across back-reef patches.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"low-retention-large-scale-reseeding-moore-reef-central-great-barrier-reef","dir":"Articles","previous_headings":"","what":"6.2 Low-retention large-scale reseeding, Moore Reef (central Great Barrier Reef)","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"scale climate-driven disturbance increases frequency intensity, need large-scale restoration beyond local interventions increasingly important (Mulà et al 2025). leveraging ocean currents large-scale production coral larvae, larval reseeding strong potential regenerate large areas reef without need direct intervention involved deployment devices outplanting fragments (e.g. Suggett et al 2019, Waters et al 2025). Using regional hydrodynamic model (RECOM) output OceanParcels, coralseed can used make predictions large-scale dispersal release site low-retention high flow scenario. Based simulations Moore Reef (northern Great Barrier Reef) 2017 (Ani et al 2024), coralseed used simulated settlement dynamics 100k individual particle tracks (Figure 4a) across large distance (~4 km length reef) short time window (6 hours). High densities larval settlement observed particle tracks intersected reef habitat (Figure 4b), total 18% settlement initial release occurred within 6 hours. outputs settlement_densities() used map_coralseed() generate spatial grid across settlement footprint quantify mean settlement densities per m2 within gridcell. Settlement recorded across total 126 grid cells totalling 312,300 m2, mean density per 57 settlers per m2 maximum density 536 settlers per m2. output flowchat_coralseed() can used either summary tool reseeding process (Figure 4c), dynamic decision-making framework synthesise adjustments larvae release timing enhancing competency can influence overall success restoration outcomes. financial perspective, direct cost-estimate initial restoration effort can converted cost per “recruit” (US$ 0.08, Figure 4c) compared traditional restoration methods (e.g. US$2.34 per outplanted coral, Schmidt-Roach et al 2025). Refinement coralseed using fine-scale maps (Figure 4d) allows spatial optimisation long-distance dispersal across sites key interest (e.g. tourism hotspots degraded reef areas).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"conclusions-and-future-directions","dir":"Articles","previous_headings":"","what":"7. Conclusions and future directions","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"decline coastal ecosystems accelerating recent decades due array local global pressures (), response, United Nations (UN) General Assembly (New York) declared 2021–2030 “UN Decade Ecosystem Restoration” specific focus accelerating global restoration degraded ecosystems (Waltham et al 2020). coastal systems, use propagules restore habitats shown considerable promise (Vanderklift et al 2019), yet several challenges remain implementing programs, including: ) upscaling operations small-scale habitats (10-² m) large-scale areas (e.g.10⁴- 106 m²), ii) understanding optimise reseeding operations maximise cost benefits, iii) demonstrating efficacy (.e. restoration outcomes) indirect benefits reseeding ecosystem scales. developed , coralseed model can help scientists managers overcome challenges providing high-resolution predictions likely settlement large numbers individual larvae (106 - 108 larvae). currently parameterised (focused) coral coral reef ecosystems, adaptability coralseed model extends ecosystems mangroves, seagrasses, shellfish, making potentially versatile tool coastal restoration (Jones et al., 2022) facilitating optimization large-scale reseeding operations across coastal habitats (Vozzo et al. 2023). open-source nature coralseed hopefully allow others adapt improve model, facilitating improved predictions expanded insight ecosystem processes functioning. coral reef restoration perspective, understanding spatial footprint larval based restoration coral reefs challenging. Early studies using coral larvae small scale due use tents nets constrain larvae substrate (Heyward et al. 2002, Edwards et al. 2015, dela Cruz & Harrison 2017, Harrison et al. 2021). proof--concept studies tested whether seeding larvae substrate result restoring populations breeding corals, demonstrated possible larval supply limited scenarios (dela Cruz & Harrison 2017, Harrison et al. 2021). direct, larval reseeding conceptually likely approach ecologically viable terms restoring biodiverse coral communities ecologically relevant scales (Doropoulos et al. 2019), directly quantifying broadscale spatial footprint larval settlement following release intrinsically difficult due small size larvae (<1 mm) complex dispersal dynamics corals reefs increase variability detection noise ratios. recent work directly quantified larval settlement 470 m2 scales conservatively interpolated >3,000 m2 (Doropoulos et al. Prep), coralseed provides high-resolution simulation modelling tool quantify scale densities required realise broader spatial footprints larval based restoration. simulation based approach, coralseed can used optimisation tool identify optimal timing larval release maximise either local retention large scale dispersal (e.g. sections 5.1 5.2), explore improving larval retention physical barriers can improve restoration outcomes. Ultimately, given difficult physically tracking individual millimetre-sized coral larvae released onto dynamic coral reef environment coralseed provides probabilistic output identify larvae likely settle, allowing scientists restoration practitioners best-estimates monitor settlement post-recruitment densities, ultimately providing means validate success – failures – restoration outcomes.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/manuscript.html","id":"references","dir":"Articles","previous_headings":"","what":"8. References","title":"coralseed [v1.1.0]: a spatially explicit probabilistic model of larval seeding for large scale restoration","text":"Abdul Wahab, M. ., de Nys, R., & Webster, N. S.: Hierarchical settlement behaviours coral larvae common coralline algae, Biol. Lett., 19, 20220399, 2023. Allaire, J., Gandrud, C., Russell, K., Yetman, C.: networkD3: D3 JavaScript Network Graphs R, R package version 0.4, 2017. Andréfouët, S., Bionaz, M.: Evaluation Allen Coral Atlas benthic habitat map product New Caledonia using representative habitat observations multi-species fishery assessment, Coral Reefs, 43, 523–540, 2024. Ani, C. J., Haller-Bull, V., Gilmour, J. P., & Robson, B. J. Connectivity modelling identifies sources sinks coral recruitment within reef clusters. Scientific Reports, 14, Article 13564, 2024. Babcock, R., & Mundy, C.: Coral recruitment: consequences settlement choice early growth survivorship two scleractinians, J. Exp. Mar. Biol. Ecol., 206, 179–201, 1996. Bayraktarov, E., Saunders, M. ., Abdullah, S., Mills, M., Beher, J., Possingham, H. P., Mumby, P. J., Lovelock, C. E.: cost feasibility marine coastal restoration, Ecol. Appl., 26, 1055–1074, 2016. Bozec, Y. M., Mumby, P. J., Kennedy, E. V.: Cumulative impacts across Australia’s Great Barrier Reef: mechanistic evaluation, Ecological Monographs, 92, e01494, 2022 Bruyère, M., Holon, F., Andrello, M., Trapon, M., Besson, M.: Modeling coral larval dispersal complex reef networks using hydrodynamic connectivity larval traits, Mar. Ecol. Prog. Ser., 715, 89–105, 2023. Bürkner, P.-C.: brms: R Package Bayesian Multilevel Models Using Stan, J. Stat. Softw., 80, 1–28, 2017. Cheng, J., Schloerke, B., Karambelkar, B., Xie, Y.: leaflet: Create Interactive Web Maps JavaScript ‘Leaflet’ Library, R package version 2.2.2, 2024. Condie, S. ., Lough, J. M., Wolanski, E.: Modelling impact climate change dispersal coral larvae Great Barrier Reef, Ecological Modelling, 440, 109364, 2021. Connolly, S. R., & Baird, . H.: Estimating dispersal potential marine larvae: dynamic models applied scleractinian corals, Ecology, 91, 3572–3583, 2010. Cowen, R. K., Lwiza, K. M. M., Sponaugle, S., Paris, C. B., & Olson, D. B.: Connectivity marine populations: open closed?, Science, 287, 857–859, 2000. Cresswell, . K., Haller-Bull, V., Gonzalez-Rivero, M., Gilmour, J. P., Bozec, Y.-M., Barneche, D. R., Robson, B., Anthony, K. R. N., Doropoulos, C., Roelfsema, C., Lyons, M., Mumby, P. J., Condie, S., Lago, V., & Ortiz, J.-C., Capturing fine-scale coral dynamics metacommunity modelling framework. Scientific Reports, 14, Article 24733, 2024  dela Cruz, D. W., Harrison, P. L.: Enhancing coral recruitment assisted mass settlement cultured coral larvae, PLOS ONE, 12, e0182451, 2017 Ditmer, M. ., Pauli, J. N., Laske, T. G., Garshelis, D. L.: Animal movement behavior reveals effects landscape structure human activity habitat use, Ecol. Appl., 33, e2810, 2023. Doropoulos, C., Vons, F., Elzinga, J., ter Hofstede, R., Salee, K., van Koningsveld, M., & Babcock, R. C.: Testing Industrial-Scale Coral Restoration Techniques: Harvesting Culturing Wild Coral-Spawn Slicks. Frontiers Marine Science, 6, 658, 2019 Duarte, C. M., Losada, . J., Hendriks, . E., Mazarrasa, ., Marbà, N.: role coastal plant communities climate change mitigation adaptation, Nat. Clim. Change, 3, 961–968, 2013. Edwards, . J., Guest, J. R., Heyward, ., Villanueva, R. D., Baria, M. V. B., Bollozos, . S. F., Golbuu, Y.: Direct seeding mass-cultured coral larvae effective option reef rehabilitation, Marine Ecology Progress Series, 525, 105–116, 2015. Figueiredo, J., Saint-Amand, ., Walker, B. K., Hanert, E., King, S.: Larval dispersal patterns connectivity Acropora Florida’s Coral Reef implications restoration, Front. Mar. Sci., 9, 1038463, 2022.  Graham, E. M., Baird, . H., & Connolly, S. R.: Survival dynamics scleractinian coral larvae implications dispersal, Coral Reefs, 27, 529–539, 2008. Gouezo, M., Langlais, C., Beardsley, J., Roff, G., Harrison, P. L., Thomson, D. P., & Doropoulos, C. Going flow: Leveraging reef‐scale hydrodynamics upscaling larval‐based restoration. Ecological Applications, 35(3), e70020, 2025. Grech, ., Pressey, R. L., Day, J. C.: Reconciling biodiversity conservation, people, protected areas agricultural suitability Australia’s tropical savannahs, Glob. Ecol. Conserv., 6, 275–286, 2016. Hadfield, M. G., Paul, V. J.: Natural chemical cues settlement metamorphosis marine-invertebrate larvae, : Advances Marine Biology, edited : Lesser, M. P., Academic Press, 69, 1–28, 2015. Heyward, . J., Smith, L. D., Rees, M., Field, S. N.: Enhancement coral recruitment situ mass culture coral larvae, Marine Ecology Progress Series, 230, 113–118, 2002. Hock, K., Wolff, N. H., Ortiz, J. C., Condie, S. ., Anthony, K. R. N., Blackwell, P. G., Mumby, P. J.: Connectivity systemic resilience Great Barrier Reef, PLoS Biol., 15, e2003355, 2017. Harrington, L., Fabricius, K., De’ath, G., & Negri, .: Recognition selection settlement substrata determine post-settlement survival corals, Ecology, 85, 3428–3437, 2004. Leis, J. M., Wright, K. J., & Johnson, R. N.: Behaviour influences dispersal connectivity small, young larvae reef fish, Mar. Ecol. Prog. Ser., 347, 185–193, 2007. Lowe, W. H., Kovach, R. P., Allendorf, F. W.: Population genetics demography unite ecology evolution, Trends Ecol. Evol., 32, 141–152, 2017. Lyons, M. B., Murray, N. J., Kennedy, E. V., Goldenberg, E., Larsen, K., Phinn, S. R.: New global area estimates coral reefs high-resolution mapping, Remote Sensing Ecology Conservation, 10, e01042, 2024 Mason, R..B., Langlais, C., Uribe-Palomino, J., Tonks, M., Coman, F., Choukroun, S., Porobix, J., Doropoulos, C.,  Reef-scale variation larval supply settlement: validating dispersal predictions observations coral larvae, Authorea, 2025 Omori, M., Fujiwara, S.: Manual restoration remediation coral reefs, Nature Conservation Bureau, Ministry Environment, Japan, 2007 Orth, R. J., Harwell, M. C., & Inglis, G. J.: Ecology seagrass seeds seagrass dispersal processes, : Seagrasses: Biology, Ecology Conservation, edited : Larkum, . W. D., Orth, R. J., Duarte, C. M., Springer, Dordrecht, 111–133, 2006. Pebesma, E. Bivand, R.: Spatial Data Science: Applications R, Chapman Hall/CRC, Boca Raton, https://doi.org/10.1201/9780429459016, 2023. Pebesma, E.: Simple Features R: Standardized Support Spatial Vector Data, R J., 10, 439–446 , 2018. Pollock, F. J., Katz, S. M., van de Water, J. . J. M., Davies, S. W., Hein, M., Torda, G., Matz, M. V., van Oppen, M. J. H.: Coral larvae restoration research: large-scale method rearing Acropora millepora larvae, inducing settlement, establishing symbiosis, PeerJ, 5, e3732, 2017. Raimondi, P. T., & Morse, . N. C.: consequences complex larval behavior coral, Ecology, 81, 3193–3211, 2000. Randall, C. J., Negri, . P., Fabricius, K. E.: Substrate preferences coral larvae: Implications reef restoration, Mar. Ecol. Prog. Ser., 600, 85–95, 2025. Severati, ., Nordborg, F. M., Heyward, ., Abdul Wahab, M. ., Brunner, C. ., Montalvo-Proano, J., & Negri, . P. AutoSpawner system – Automated ex situ spawning fertilisation corals reef restoration. Journal Environmental Management, 352, 121886, 2024. Tennekes, M.: tmap: Thematic Maps R, J. Stat. Softw., 84, 1–39, 2018. van Katwijk, M. M., Thorhaug, ., Marbà, N., Orth, R. J., Duarte, C. M., Kendrick, G. ., Althuizen, . H. J., Balestri, E., Bernard, G., Cambridge, M. L., Cunha, ., Durance, C., Giesen, W., Han, Q., Hosokawa, S., Kiswara, W., Komatsu, T., Lee, K.-S., Meinesz, ., Nakaoka, M., O’Brien, K. R., Ransijn, . M. ., Saito, H., Verduin, J. J.: Global analysis seagrass restoration: importance large‐scale planting, J. Appl. Ecol., 53, 567–578, 2016. Vanderklift, M. ., Doropoulos, C., Gorman, D., Leal, ., Minne, . J. P., Statton, J., Steven, . D. L.: Using propagules restore coastal marine ecosystems, Front. Mar. Sci., 7, 724, 2020. Vizentin-Bugoni, J., Felix, G. M., Ping, L., Chamorro, S., Ornelas, J. F., & Dalsgaard, B.: Ecological correlates species’ roles highly invaded seed dispersal networks, J. Anim. Ecol., 91, 2632–2645, 2022. Waltham, N. J., Elliott, M., Lee, S. Y., Lovelock, C., Duarte, C. M., Buelow, C., Simenstad, C., Nagelkerken, ., Claassens, L., Wen, C. K.-C., Barletta, M., Connolly, R. M., Gillies, C., Mitsch, W. J., Ogburn, M. B., Purandare, J., Possingham, H., & Sheaves, M., UN Decade Ecosystem Restoration 2021–2030—chance success restoring coastal ecosystems? Frontiers Marine Science, 7, 71, 2020. Waycott, M., Duarte, C. M., Carruthers, T. J. B., Orth, R. J., Dennison, W. C., Olyarnik, S., Calladine, ., Fourqurean, J. W., Heck, K. L., Hughes, . R., Kendrick, G. ., Kenworthy, W. J., Short, F. T., Williams, S. L.: Accelerating loss seagrasses across globe threatens coastal ecosystems, P. Natl. Acad. Sci. USA, 106, 12377–12381, 2009","code":""},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_lizard.html","id":"seed-particles","dir":"Articles","previous_headings":"","what":"1) seed particles","title":"Lizard Island (nGBR CONNIE)","text":"","code":"library(coralseed) library(ggplot2) library(tidyverse) library(sf) library(tmap)    sf_use_s2(FALSE)    # load seascape   lizard_benthic_map <- system.file(\"extdata\", \"Lizard_Benthic.geojson\", package = \"coralseed\") |>                               st_read(quiet=TRUE)  lizard_reef_map <- system.file(\"extdata\", \"Lizard_Geomorphic.geojson\", package = \"coralseed\") |>                               st_read(quiet=TRUE)  lizard_seascape <- seascape_probability(reefoutline=lizard_reef_map, habitat=lizard_benthic_map)  # load particles lizard_particles_sf <- system.file(\"extdata\", \"lizard_del_14_1512_sim1_10.json\", package = \"coralseed\") |> st_read(quiet=TRUE)   # run seed particles lizard_particles <- seed_particles(lizard_particles_sf,                               zarr = FALSE,                               set.centre = TRUE,                               seascape = lizard_seascape,                               probability = \"additive\",                               limit.time = 12,                               competency.function = \"exponential\",                               crs = 20353,                               simulate.mortality = \"typeIII\",                               simulate.mortality.n = 0.1,                               return.plot = TRUE,                               return.summary = TRUE,                               silent = FALSE)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_lizard.html","id":"settle-particles","dir":"Articles","previous_headings":"","what":"2) settle particles","title":"Lizard Island (nGBR CONNIE)","text":"","code":"lizard_settlers <- settle_particles(lizard_particles,                                     probability = \"additive\",                                     return.plot=FALSE,                                     silent = TRUE)  plot_particles(lizard_settlers$points, lizard_seascape) lizard_settlement_density <- settlement_density(lizard_settlers$points) lizard_settlement_summary <- settlement_summary(lizard_particles, lizard_settlers, cellsize=50)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_lizard.html","id":"map-coralseed","dir":"Articles","previous_headings":"","what":"3) map coralseed","title":"Lizard Island (nGBR CONNIE)","text":"","code":"map_coralseed(seed_particles_input = lizard_particles,               settle_particles_input = lizard_settlers,               settlement_density_input = lizard_settlement_density,               seascape_probability = lizard_seascape,               restoration.plot = c(100,100),               show.footprint = TRUE,               show.tracks = TRUE,               subsample = 1000,               webGL = TRUE)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_lizard.html","id":"coralseed-outputs","dir":"Articles","previous_headings":"","what":"4) coralseed outputs","title":"Lizard Island (nGBR CONNIE)","text":"","code":"flowchart_coralseed(lizard_particles, lizard_settlers, multiplier=1000, postsettlement=0.8)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_moore.html","id":"seed-particles","dir":"Articles","previous_headings":"","what":"1) seed particles","title":"Moore Reef (cGBR oceanparcels)","text":"","code":"library(coralseed) library(ggplot2) library(tidyverse) library(sf) library(tmap)  sf_use_s2(FALSE)  # load seascape   moore_benthic_map <- system.file(\"extdata\", \"Moore_Benthic.geojson\", package = \"coralseed\") |>                               st_read(quiet=TRUE)  moore_reef_map <- system.file(\"extdata\", \"Moore_Geomorphic.geojson\", package = \"coralseed\") |>                               st_read(quiet=TRUE)  moore_seascape <- seascape_probability(reefoutline=moore_reef_map, habitat=moore_benthic_map)  # load particles - import example zarr (oceanparcels output) moorereef_particles <- system.file(\"extdata\", \"output.zarr\", package = \"coralseed\") |>                             import_zarr()  # run seed particles moore_particles <- seed_particles(moorereef_particles,                             set.centre = TRUE,                             seascape = moore_seascape,                             probability = \"additive\",                             limit_time = 7,                             competency.function = \"exponential\",                             crs = 20353,                             simulate.mortality = \"typeII\",                             simulate.mortality.n = 0.1,                             return.plot = TRUE,                             return.summary = TRUE,                             silent = FALSE)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_moore.html","id":"settle-particles","dir":"Articles","previous_headings":"","what":"2) settle particles","title":"Moore Reef (cGBR oceanparcels)","text":"","code":"moore_settlers <-  settle_particles(moore_particles,                                     probability = \"additive\",                                     silent = TRUE)  moore_settlement_density <- settlement_density(moore_settlers$points, cellsize=50)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_moore.html","id":"map-coralseed","dir":"Articles","previous_headings":"","what":"3) map coralseed","title":"Moore Reef (cGBR oceanparcels)","text":"","code":"map_coralseed(seed_particles_input = moore_particles,               settle_particles_input = moore_settlers,               settlement_density_input = moore_settlement_density,               seascape_probability = moore_seascape,               restoration.plot = c(100,100),               show.footprint = TRUE,               show.tracks = TRUE,               subsample = 1000,               webGL = TRUE)"},{"path":"https://marine-ecologist.github.io/coralseed/articles/scenario_moore.html","id":"coralseed-outputs","dir":"Articles","previous_headings":"","what":"4) coralseed outputs","title":"Moore Reef (cGBR oceanparcels)","text":"","code":"flowchart_coralseed(seed_particles_input = moore_particles,                      settle_particles_input = moore_settlers,                      multiplier = 10000,                      postsettlement = 0.8)"},{"path":"https://marine-ecologist.github.io/coralseed/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"George Roff. Author, maintainer.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roff G (2025). coralseed: Spatially Explicit Reef-Scale Model Larval Reseeding. R package version 1.1.0, https://marine-ecologist.github.io/coralseed/.","code":"@Manual{,   title = {coralseed: Spatially Explicit Reef-Scale Model of Larval Reseeding},   author = {George Roff},   year = {2025},   note = {R package version 1.1.0},   url = {https://marine-ecologist.github.io/coralseed/}, }"},{"path":"https://marine-ecologist.github.io/coralseed/index.html","id":"coralseed-v101","dir":"","previous_headings":"","what":"coralseed Project","title":"coralseed Project","text":"coralseed spatially explicit probabilistic model aims quantify spatial footprint coral larval re-seeding restoration progjects. model based input high-resolution oceanographic models (CONNIE) tracking individual particles space time. parameterising larval behaviour (competency, habitat specific substrate settlement preferences, swimming behaviour) individual-based probability settlement can modelled 105 - 107 larvae. Individual-based settlement probability dispersal paths overlaid onto high-resolution habitat maps (Allen Coral Atlas) form spatially-explicit model settlement following release coral larvae. coralseed aims provide insight key knowledge gaps larval restoration: larvae settle following release? spatial footprint larval reseeding projects? likely densities settled corals? densities adult corals (~10cm size) produced reseeding located? varying initial model parameters (e.g. tidal currents, time release, larval competency, larval densities, location release sites), simulation modelling approach can used quantify likely spatial footprint expected settlement densities, allowing optimisation upscaling larval reseeding programs Great Barrier Reef elsewhere.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"coralseed Project","text":"coralseed can installed github base parameterisation coralseed across 6.95hr time period (limit_time) exponential time--settlement model parameterisation (competency.function) type mortality curve (simulate.mortality) applied 10% population 24 hr period (simulate.mortality.n) additive settlement function (probability).","code":"#install.packages(\"remotes\") install_github(\"marine-ecologist/coralseed\") library(coralseed) library(ggplot2) library(tidyverse) library(sf) library(tmap)  sf_use_s2(FALSE)  ## 0. Load example datasets  lizard_benthic_map <- st_read(\"../data-aux/Lizard-20250314042923/Benthic-Map/benthic.geojson\", quiet=TRUE) lizard_reef_map <- st_read(\"../data-aux/Lizard-20250314042923/Geomorphic-Map/geomorphic.geojson\", quiet=TRUE) lizard_particles <- st_read(\"../data-aux/run_day_12036_lizard_del_14_1512_sim1_10K_10.json\", quiet=TRUE)    ## 1. simulate settlement probabilities from habitat maps # `seascape_probability` takes coral atlas inputs and a data.frame of settlement # probability (mean, se) to simulate probability of settlement in habitats surrounding the release area  lizard_seascape <- seascape_probability(reefoutline=lizard_reef_map, habitat=lizard_benthic_map)   ## 2. seed particles from dispersal model and simulate competency # `seed_particles` outputs summary statistics and a four panel diagnostic plot   lizard_particles <- seed_particles(input = \"../data-aux/run_day_12036_lizard_del_14_1512_sim1_10K_10.json\",                                    zarr = FALSE,                                    set.centre = TRUE,                                    seascape = lizard_seascape,                                    probability = \"additive\",                                    limit.time = 12,                                    competency.function = \"exponential\",                                    crs = 20353,                                    simulate.mortality = \"typeIII\",                                    simulate.mortality.n = 0.1,                                    return.plot = TRUE,                                    return.summary = TRUE,                                    silent = FALSE)                                     ## 3. simulate settlement of particles # `settle_particles` then applies probability across the seascape to simulate spatially # explicit patterns of settlement across the seascape:   lizard_settlers <- settle_particles(lizard_particles,                                     probability = \"additive\",                                     return.plot=FALSE,                                     silent = TRUE)  lizard_settlement_density <- settlement_density(lizard_settlers$points)   ## 4. Map combined coralseed outputs # `map_coralseed` visualises all outputs from the above three models    map_coralseed(seed_particles_input = lizard_particles,               settle_particles_input = lizard_settlers,               settlement_density_input = lizard_settlement_density,               seascape_probability = lizard_seascape,               restoration.plot = c(100,100),               show.footprint = TRUE,               show.tracks = TRUE,               subsample = 1000,               webGL = TRUE)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":null,"dir":"Reference","previous_headings":"","what":"Animate Coral Seed Particle Tracks — animate_coralseed","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"function animates particle tracks time using tmap, creating .gif file.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"","code":"animate_coralseed(input, outputfolder, n = 100)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"input sf object containing particle tracks. Must include 'time' 'id' column. filename Path output gif file. width Width output gif pixels. Default 1200. height Height output gif pixels. Default 600. delay Delay frames gif, milliseconds. Default 10. loop Logical; gif loop? Default FALSE.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"Saves gif specified filename returns animation object.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"Packages required: tmap, sf, dplyr","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/animate_coralseed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animate Coral Seed Particle Tracks — animate_coralseed","text":"","code":"# library(sf) # library(dplyr) # library(tmap) # # sf::sf_use_s2(FALSE) # lizard_particles_raw <- sf::st_read(\"/path/to/file.json\", quiet=TRUE) |> #   dplyr::filter(id < 100) |> #   sf::st_zm(drop = TRUE, what = \"ZM\") # # animate_coralseed( #   input = lizard_particles_raw, #   filename = \"/path/to/save/test.gif\" # )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_map.html","id":null,"dir":"Reference","previous_headings":"","what":"benthic_map — benthic_map","title":"benthic_map — benthic_map","text":"example benthic_map Lizard Island","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"benthic_map — benthic_map","text":"","code":"benthic_map"},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"benthic_map — benthic_map","text":"object class sf.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_map.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"benthic_map — benthic_map","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"benthic_map — benthic_map","text":"","code":"data(benthic_map)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"benthic_probability — benthic_probability","title":"benthic_probability — benthic_probability","text":"example benthic_probability matrix settlement types habitat classes (mean se)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"benthic_probability — benthic_probability","text":"","code":"benthic_probability"},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_probability.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"benthic_probability — benthic_probability","text":"object class df.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_probability.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"benthic_probability — benthic_probability","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/benthic_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"benthic_probability — benthic_probability","text":"","code":"data(benthic_probability)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/calculate_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dispersion — calculate_dispersion","title":"Calculate dispersion — calculate_dispersion","text":"Function calculate dispersion settled points","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/calculate_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dispersion — calculate_dispersion","text":"","code":"calculate_dispersion(input)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/calculate_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate dispersion — calculate_dispersion","text":"input sf POINTS file (defaults NULL)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/calculate_dispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate dispersion — calculate_dispersion","text":"dispersion = standard deviation distances point centroid points","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/coralseed-package.html","id":null,"dir":"Reference","previous_headings":"","what":"coralseed: Spatially Explicit Reef-Scale Model of Larval Reseeding — coralseed-package","title":"coralseed: Spatially Explicit Reef-Scale Model of Larval Reseeding — coralseed-package","text":"spatially explicit, individual-based probabilistic model predicting coral settlement following larval dispersal coral reefs.","code":""},{"path":[]},{"path":"https://marine-ecologist.github.io/coralseed/reference/coralseed-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coralseed: Spatially Explicit Reef-Scale Model of Larval Reseeding — coralseed-package","text":"Maintainer: George Roff george.roff@csiro.au (ORCID)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/detachAllPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"detachAllPackages — detachAllPackages","title":"detachAllPackages — detachAllPackages","text":"Function detach loaded packages","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/detachAllPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detachAllPackages — detachAllPackages","text":"","code":"detachAllPackages()"},{"path":"https://marine-ecologist.github.io/coralseed/reference/drop_stick.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop stuck particles — drop_stick","title":"Drop stuck particles — drop_stick","text":"Function remove particles remain location n_time consecutive timesteps.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/drop_stick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop stuck particles — drop_stick","text":"","code":"drop_stick(input, n_time = 100, saveoutput = NULL)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/drop_stick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop stuck particles — drop_stick","text":"input input sf object containing particle tracks time id columns n_time number consecutive identical positions consider \"stuck\" (default: 100) saveoutput optional file path export filtered dataset GeoJSON","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_ocean_parcels.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_ocean_particles — extract_ocean_parcels","title":"extract_ocean_particles — extract_ocean_parcels","text":"Function convert ocean particles Zarr folders coralseed format Extracts metadata get correct time format uses Rarr:read_zarr_array() get lat, lon, time, z arrays converts sf points","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_ocean_parcels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_ocean_particles — extract_ocean_parcels","text":"","code":"extract_ocean_parcels(folder, crs = 4326, subsample = \"none\", depth = FALSE)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_ocean_parcels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_ocean_particles — extract_ocean_parcels","text":"folder input folder e.g. /outputs.zarr/ crs output crs sf object subsample sample n total oceanparcels trajectories depth TRUE/FALSE, FALSE returns 2D array (xy), TRUE returns 3D array (xyz)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_ocean_parcels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extract_ocean_particles — extract_ocean_parcels","text":"Example usage folder <- \"/Users/rof011/Mooreoutputs2015Moore_trajectory_2015_d12d.zarr_mon20th.zarr/\" sf_data <- extract_ocean_parcels(folder, sample=10, crs=20353) print(sf_data)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palettes — extract_parallel","title":"Color palettes — extract_parallel","text":"Functions colour maps Function extract points paths multiple %dopar% outputs Function quickly map settlers","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palettes — extract_parallel","text":"","code":"seascapecolors()  extract_parallel(input, type)  map_coralseed(   seed_particles_input = NULL,   settle_particles_input = NULL,   settlement_density_input = NULL,   crs = 20353,   seascape_probability = NULL,   restoration.plot = c(100, 100),   show.tracks = TRUE,   show.footprint = FALSE,   subsample = NULL,   heatmap_res = 2,   heatmap_buffer = 0.25,   scalebar = 200,   webGL = FALSE )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/extract_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color palettes — extract_parallel","text":"input list %dopar% outputs type either points paths seed_particles_input input seed_particles_input settle_particles_input input settle_particles_input settlement_density_input input settlement density seascape_probability input seascape_probability restoration.plot dimensions restoration plot metres show.tracks option show particle tracks (TRUE, large files slower renders) show.footprint show spatial footprint (TRUE/FALSE) subsample subsample large datasets visualisation (n) heatmap_res spatial resolution heatmap heatmap_buffer spatial buffer around heatmap metres scalebar set scale X metres webGL use webGL tmap? TRUE/FALSE","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/flowchart_coralseed.html","id":null,"dir":"Reference","previous_headings":"","what":"Flowchart of Coral Larval Fates — flowchart_coralseed","title":"Flowchart of Coral Larval Fates — flowchart_coralseed","text":"Generate interactive Sankey diagram showing fate coral larvae dispersal, settlement, mortality.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/flowchart_coralseed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flowchart of Coral Larval Fates — flowchart_coralseed","text":"","code":"flowchart_coralseed(   seed_particles_input,   settle_particles_input,   save_output = NULL,   multiplier = 1,   postsettlement = 0.8,   width = 10,   height = 6 )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/flowchart_coralseed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flowchart of Coral Larval Fates — flowchart_coralseed","text":"seed_particles_input sf object tibble containing released larval trajectories least id, dispersaltime, state. settle_particles_input named list containing $points, sf object settled larvae id. multiplier Numeric multiplier scale particle counts (e.g., simulated particle represents multiple larvae). postsettlement Postsettlement mortality proportion (e.g. 80% = 0.8)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/flowchart_coralseed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flowchart of Coral Larval Fates — flowchart_coralseed","text":"interactive Sankey diagram (htmlwidget).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/flowchart_coralseed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flowchart of Coral Larval Fates — flowchart_coralseed","text":"","code":"if (FALSE) { # \\dontrun{ flowchart_coralseed(moore_particles, moore_settlers, multiplier = 1, postsettlement = 0.8) } # }"},{"path":"https://marine-ecologist.github.io/coralseed/reference/ggplot_silent.html","id":null,"dir":"Reference","previous_headings":"","what":"Silence ggplot warnings — ggplot_silent","title":"Silence ggplot warnings — ggplot_silent","text":"Replacement print.ggplot() mutes warnings.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/ggplot_silent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Silence ggplot warnings — ggplot_silent","text":"","code":"ggplot_silent(plot_obj, ...)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/ggplot_silent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Silence ggplot warnings — ggplot_silent","text":"plot_obj input ... Arguments passed print.ggplot()","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/import_zarr.html","id":null,"dir":"Reference","previous_headings":"","what":"Seed particles — import_zarr","title":"Seed particles — import_zarr","text":"Function convert xarrr arrays oceanparticles df format","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/import_zarr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seed particles — import_zarr","text":"","code":"import_zarr(input, origin = \"1970-01-01 15:00:00\", crs = 4326)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/import_zarr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seed particles — import_zarr","text":"input input zarr folder crs coordinate reference system (default = 4326)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/import_zarr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seed particles — import_zarr","text":"zarr_file_path <- \"/Users/rof011/oceanparcels/outputs/Elford_16073_Slope_71a.zarr/\"","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/infamis_tiles_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"A fitted brms model for tile-level settlement — infamis_tiles_exp","title":"A fitted brms model for tile-level settlement — infamis_tiles_exp","text":"fitted brms model tile-level settlement","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/infamis_tiles_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A fitted brms model for tile-level settlement — infamis_tiles_exp","text":"","code":"infamis_tiles_exp"},{"path":"https://marine-ecologist.github.io/coralseed/reference/infamis_tiles_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A fitted brms model for tile-level settlement — infamis_tiles_exp","text":"brmsfit object N chains, etc.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/infamis_tiles_exp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A fitted brms model for tile-level settlement — infamis_tiles_exp","text":"Simulated observed coral settlement data.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata — metadata","title":"metadata — metadata","text":"Metadata five example dispersal datasets datasets","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata — metadata","text":"","code":"metadata"},{"path":"https://marine-ecologist.github.io/coralseed/reference/metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"metadata — metadata","text":"object class sf.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"metadata — metadata","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"metadata — metadata","text":"","code":"data(metadata)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter_draws_exp — parameter_draws_exp","title":"parameter_draws_exp — parameter_draws_exp","text":"example posterior draws exponential brms model time--competency","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter_draws_exp — parameter_draws_exp","text":"","code":"parameter_draws_exp"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_exp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parameter_draws_exp — parameter_draws_exp","text":"object class df.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_exp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"parameter_draws_exp — parameter_draws_exp","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter_draws_exp — parameter_draws_exp","text":"","code":"data(parameter_draws_exp)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_log.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter_draws_log — parameter_draws_log","title":"parameter_draws_log — parameter_draws_log","text":"example posterior draws lognormal brms model time--competency","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter_draws_log — parameter_draws_log","text":"","code":"parameter_draws_log"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_log.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parameter_draws_log — parameter_draws_log","text":"object class df.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_log.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"parameter_draws_log — parameter_draws_log","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter_draws_log — parameter_draws_log","text":"","code":"data(parameter_draws_log)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter_draws_weibull — parameter_draws_weibull","title":"parameter_draws_weibull — parameter_draws_weibull","text":"example posterior draws Weibull brms model time--competency","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter_draws_weibull — parameter_draws_weibull","text":"","code":"parameter_draws_weibull"},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_weibull.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"parameter_draws_weibull — parameter_draws_weibull","text":"object class df.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_weibull.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"parameter_draws_weibull — parameter_draws_weibull","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/parameter_draws_weibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter_draws_weibull — parameter_draws_weibull","text":"","code":"data(parameter_draws_weibull)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/particle_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Particle distances — particle_distances","title":"Particle distances — particle_distances","text":"Function calculate distances particles timepoint limit particle distances tmax (minutes, e.g. 60 1hr) returns either  \"sf\" (\"MULTILINGSTRING\" id) \"df\" (data.frame total length id) depending type=\"df\" type=\"sf\"","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particle_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Particle distances — particle_distances","text":"","code":"particle_distances(input = NULL, tmax = NULL, type = \"df\", ...)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/particle_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Particle distances — particle_distances","text":"input input (defaults NULL) tmax limit particle times less tmax type export format \"sf\" \"df\" (see ) ... pass arguments","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Particles to tracks — particles_to_tracks","title":"Particles to tracks — particles_to_tracks","text":"Function convert particles (sf points) tracks (sf linestrings, multilinestring)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Particles to tracks — particles_to_tracks","text":"","code":"particles_to_tracks(input = NULL, by = \"id\", type = \"MULTILINESTRING\")"},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Particles to tracks — particles_to_tracks","text":"input input (defaults NULL) factor level type \"LINESTRING\" \"MULTILINESTRING\" (default)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Particles to tracks — particles_to_tracks","text":"note: GEOS throws error n points less 3. using argument function drops levels less 3. issue mapping removes late competency particles, check careful converting factors paths: https://gis.stackexchange.com/questions/447578/geosexception-illegalargumentexception-point-array-must-contain-0--1-elemen !!sym()","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Particles to tracks — particles_to_tracks_linestring","title":"Particles to tracks — particles_to_tracks_linestring","text":"Function convert particles (sf points) tracks (sf linestrings, multilinestring)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Particles to tracks — particles_to_tracks_linestring","text":"","code":"particles_to_tracks_linestring(   input = NULL,   slicesample = 100,   by = \"competency\" )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Particles to tracks — particles_to_tracks_linestring","text":"input input (defaults NULL) slicesample subset n particles factor level","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_linestring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Particles to tracks — particles_to_tracks_linestring","text":"note: GEOS throws error n points less 3. using argument function drops levels less 3. issue mapping removes late competency particles, check careful converting factors paths: https://gis.stackexchange.com/questions/447578/geosexception-illegalargumentexception-point-array-must-contain-0--1-elemen !!sym()","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Particles to tracks v3.0 — particles_to_tracks_time","title":"Particles to tracks v3.0 — particles_to_tracks_time","text":"Function convert particles (sf points) tracks (sf linestrings, multilinestring)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Particles to tracks v3.0 — particles_to_tracks_time","text":"","code":"particles_to_tracks_time(   input = NULL,   by = \"competency\",   multilinestring = TRUE )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Particles to tracks v3.0 — particles_to_tracks_time","text":"input input (defaults NULL) factor level multilinestring \"LINESTRING\" (FALSE) \"MULTILINESTRING\" (TRUE)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/particles_to_tracks_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Particles to tracks v3.0 — particles_to_tracks_time","text":"Avoids issue : note: GEOS throws error n points less 3. using argument function drops levels less 3. issue mapping removes late competency particles, check careful converting factors paths: https://gis.stackexchange.com/questions/447578/geosexception-illegalargumentexception-point-array-must-contain-0--1-elemen !!sym()","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://marine-ecologist.github.io/coralseed/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"plot draws — plot_draws","title":"plot draws — plot_draws","text":"Function plot spaghetti draws time--competency brms model","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot draws — plot_draws","text":"","code":"plot_draws(input, slice = 100)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot draws — plot_draws","text":"slice n number simulations spaghetti plot n number simulations","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws_median.html","id":null,"dir":"Reference","previous_headings":"","what":"plot draws — plot_draws_median","title":"plot draws — plot_draws_median","text":"Function plot median 90% CI draws time--competency brms model","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot draws — plot_draws_median","text":"","code":"plot_draws_median(input)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_draws_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot draws — plot_draws_median","text":"n number simulations","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_particles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from settle_particles — plot_particles","title":"Plot output from settle_particles — plot_particles","text":"Function plot output seed_particles base R quick cheks","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from settle_particles — plot_particles","text":"","code":"plot_particles(   input = NULL,   seascape = NULL,   parameter = \"dispersaltime\",   pch = 16,   size = 0.5,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from settle_particles — plot_particles","text":"input input seascape seascape habitat input parameter parameter (column coralseed) pch pch size size ... passes functions","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_recom.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_recom: Visualize Ocean Currents and Wind from NetCDF Data — plot_recom","title":"plot_recom: Visualize Ocean Currents and Wind from NetCDF Data — plot_recom","text":"Reads NetCDF file containing ocean current wind data, extracts relevant variables specified depth (-2.35m), generates time-series spatial plots. Highlights slack current time visualizes magnitude direction currents wind.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_recom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_recom: Visualize Ocean Currents and Wind from NetCDF Data — plot_recom","text":"","code":"plot_recom(   nc_file = \"/Users/rof011/GBR_connectivity/Oceanparcels/Moore_uv_2015-12-05.nc\",   parcels_reefs = sf::st_read(\"/Users/rof011/GBR_connectivity/inputs/Moore_2D.gpkg\",     quiet = TRUE),   parcels_polygon =     dplyr::filter(sf::st_read(\"/Users/rof011/GBR_connectivity/inputs/Moore_2D.gpkg\",     quiet = TRUE), site_id == \"Moore_16071_Slope_39a\") )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_recom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_recom: Visualize Ocean Currents and Wind from NetCDF Data — plot_recom","text":"nc_file Character. Path NetCDF file containing oceanographic data. parcels_reefs sf object. Spatial dataset reef locations. parcels_polygon sf object. Spatial dataset specific study site polygon.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_recom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_recom: Visualize Ocean Currents and Wind from NetCDF Data — plot_recom","text":"combined ggplot object displaying temporal trends ocean currents wind, along spatial maps current speeds slack current time.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_settlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot output from settle_particles — plot_settlers","title":"Plot output from settle_particles — plot_settlers","text":"Function plot output seed_particles base R quick cheks","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_settlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot output from settle_particles — plot_settlers","text":"","code":"plot_settlers(input = NULL, pch = 16, size = 0.5, ...)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/plot_settlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot output from settle_particles — plot_settlers","text":"input input pch pch size size ... passes functions","code":""},{"path":[]},{"path":"https://marine-ecologist.github.io/coralseed/reference/predict_competency.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict competency — predict_competency","title":"Predict competency — predict_competency","text":"Function generate time--settlement probability distributions using brms model","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/predict_competency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict competency — predict_competency","text":"","code":"predict_competency(   input,   n_particles = 100,   max.time = NULL,   seed.value = NULL,   return.plot = FALSE,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/predict_competency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict competency — predict_competency","text":"input brmsfit object model using 'lognormal', 'exponential', 'weibull' family n_particles number random simulations max.time optional maximum dispersal time limit (default max time input$data) seed.value random seed reproducibility return.plot TRUE, returns ggplot survival curves + point estimates ... additional arguments (used)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/predict_competency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict competency — predict_competency","text":"Examples: predict_competency(infamis_tiles_exp, n_particles = 100) predict_competency(infamis_tiles_weibull, n_particles = 100) predict_competency(infamis_tiles_log, n_particles = 100)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/reef_map.html","id":null,"dir":"Reference","previous_headings":"","what":"reef_map — reef_map","title":"reef_map — reef_map","text":"example reef_map Lizard Island","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/reef_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reef_map — reef_map","text":"","code":"reef_map"},{"path":"https://marine-ecologist.github.io/coralseed/reference/reef_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"reef_map — reef_map","text":"object class sf.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/reef_map.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"reef_map — reef_map","text":"See index.html","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/reef_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reef_map — reef_map","text":"","code":"data(reef_map)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/return_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"return draws — return_draws","title":"return draws — return_draws","text":"Function return draws time--competency brms model","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/return_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return draws — return_draws","text":"","code":"return_draws(input, fit, tmax = 12, by = 1, n = 1000, ...)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/return_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return draws — return_draws","text":"input brms model fit tmax max time hours seq minutes n number simulations","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/save2.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely Save R Objects Without Overwriting the File — save2","title":"Safely Save R Objects Without Overwriting the File — save2","text":"Wraps save. file already exists, overwritten. message printed indicating whether file successfully written already existed.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/save2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely Save R Objects Without Overwriting the File — save2","text":"","code":"save2(..., file = stop(\"'file' must be specified\"))"},{"path":"https://marine-ecologist.github.io/coralseed/reference/save2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely Save R Objects Without Overwriting the File — save2","text":"... Data frame(s), object(s), arguments, passed save. Required. file Path/file name output. Required.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/save2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Safely Save R Objects Without Overwriting the File — save2","text":"code https://github.com/stopsack/khsmisc/blob/HEAD/R/datahandling.R","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_color_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Seascape color palette — seascape_color_pal","title":"Seascape color palette — seascape_color_pal","text":"Returns named vector colors coral seascape habitat classes.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_color_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seascape color palette — seascape_color_pal","text":"","code":"seascape_color_pal()"},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_color_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seascape color palette — seascape_color_pal","text":"named character vector colors","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Seascape Probability — seascape_probability","title":"Seascape Probability — seascape_probability","text":"Function generate spatial settlement probability layers Allen Coral Atlas maps.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seascape Probability — seascape_probability","text":"","code":"seascape_probability(   reefoutline = benthic_map,   habitat = reef_map,   probability = NULL,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seascape Probability — seascape_probability","text":"reefoutline sf object (filepath) Coral Atlas benthic habitat (reef outline) habitat sf object (filepath) Coral Atlas geomorphic classes probability Optional data.frame class, means, se columns custom settlement probabilities. NULL, defaults used. ... used. Placeholder extensibility.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seascape_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seascape Probability — seascape_probability","text":"sf object class, habitat_id, settlement_probability","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles.html","id":null,"dir":"Reference","previous_headings":"","what":"Seed particles — seed_particles","title":"Seed particles — seed_particles","text":"Function seed particles","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seed particles — seed_particles","text":"","code":"seed_particles(   input = NULL,   seascape = NULL,   subsample = NULL,   simulate.mortality = \"none\",   simulate.mortality.n = 0.1,   brmsfit = infamis_tiles_exp,   set_b_Intercept = NULL,   limit.time = NA,   set.centre = TRUE,   seed.value = NULL,   crs = 32755,   interval = \"1 mins\",   silent = TRUE,   return.summary = FALSE,   return.plot = FALSE,   save.plot = FALSE,   plot.width = 12,   plot.height = 7.5,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seed particles — seed_particles","text":"input input seascape shp file inputs seascape_probability() subsample subsample n samples simulate.mortality set mortality type via simulate_mortality() one \"typeI\",\"typeII\", \"typeIII\" (defaults \"none\") simulate.mortality.n set proportion corals kill 24hr period, 0 none, 1 100 (defaults 0.1 10%) brmsfit brmsfit model predicting competency set_b_Intercept manually set intercept (development) limit.time limit time series (e.g. 720 mins) set.centre reset CONNIE input central t0 point (defaults TRUE) seed.value set seed consistent results (defaults NULL) crs coordinate reference system, default EPSG:32755 interval time interval interpolating paths silent silence printing results (defaults TRUE) return.summary return summary table return.plot return plot object save.plot path save plot image plot.width width saved plot plot.height height saved plot ... passes functions","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seed particles — seed_particles","text":"seed_particles() uses predict_competency(), simulate_mortality() seed_particles(input = \"Users/rof011/coralseed/data-raw/run_day_11656_lizard_fcst_15_2611_26.json\", seascape = seascape, brmsfit=infamis_tiles_exp, simulate.mortality = \"typeI\", simulate.mortality.n = 0.1)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Seed particles — seed_particles_dt","title":"Seed particles — seed_particles_dt","text":"Function seed particles","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seed particles — seed_particles_dt","text":"","code":"seed_particles_dt(   input = NULL,   seascape = NULL,   subsample = NULL,   simulate.mortality = \"none\",   simulate.mortality.n = 0.1,   brmsfit = infamis_tiles_exp,   set_b_Intercept = NULL,   limit.time = NA,   set.centre = TRUE,   seed.value = NULL,   crs = 32755,   interval = \"1 mins\",   silent = TRUE,   return.summary = FALSE,   return.plot = FALSE,   save.plot = FALSE,   plot.width = 12,   plot.height = 7.5,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seed particles — seed_particles_dt","text":"input input seascape shp file inputs seascape_probability() subsample subsample n samples simulate.mortality set mortality type via simulate_mortality() one \"typeI\",\"typeII\", \"typeIII\" (defaults \"none\") simulate.mortality.n set proportion corals kill 24hr period, 0 none, 1 100 (defaults 0.1 10%) brmsfit brmsfit model predicting competency set_b_Intercept manually set intercept (development) limit.time limit time series (e.g. 720 mins) set.centre reset CONNIE input central t0 point (defaults TRUE) seed.value set seed consistent results (defaults NULL) crs coordinate reference system, default EPSG:32755 interval time interval interpolating paths silent silence printing results (defaults TRUE) return.summary return summary table return.plot return plot object save.plot path save plot image plot.width width saved plot plot.height height saved plot ... passes functions","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/seed_particles_dt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seed particles — seed_particles_dt","text":"seed_particles() uses predict_competency(), simulate_mortality() seed_particles_dt(input = \"Users/rof011/coralseed/data-raw/run_day_11656_lizard_fcst_15_2611_26.json\", seascape = seascape, brmsfit=infamis_tiles_exp, simulate.mortality = \"typeI\", simulate.mortality.n = 0.1)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Set buffer — set_buffer","title":"Set buffer — set_buffer","text":"Function generate sf file bounding box. Used tmap visualisations","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set buffer — set_buffer","text":"","code":"set_buffer(input = NULL, buffer = 150)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set buffer — set_buffer","text":"input input (defaults NULL) buffer distance surrounding particle boundary (defaults 250m)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_restoration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set restoration plot — set_restoration_plot","title":"Set restoration plot — set_restoration_plot","text":"Function create rectangular polygon around release point (centroid t0 particle release) plotting tmap","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_restoration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set restoration plot — set_restoration_plot","text":"","code":"set_restoration_plot(   input = NULL,   width = NULL,   length = NULL,   crs = 4326,   center = \"coralseed\" )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/set_restoration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set restoration plot — set_restoration_plot","text":"input input sf object used derive center width width metres length length metres crs CRS output object (default 4326) center either \"coralseed\" t0-based centroid, \"sf\" direct centroid","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settle_particles.html","id":null,"dir":"Reference","previous_headings":"","what":"Settle Particles — settle_particles","title":"Settle Particles — settle_particles","text":"Function determine probability settlement particles pass suitable substrate. Options: \"additive\": settle somewhere habitat intersect regardless time \"lagged\": sample first 10 minutes habitat entry \"rapid\": settle first habitat intersect","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settle_particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settle Particles — settle_particles","text":"","code":"settle_particles(   input,   seascape = seascape,   probability = \"additive\",   silent = TRUE,   return.plot = FALSE,   subsample = NULL,   seed.value = NULL,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/settle_particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settle Particles — settle_particles","text":"input output seed_particles() directly particle sf object seascape sf object seascape_probability(), plotting base probability settlement rule, one \"additive\", \"rapid\", \"lagged\" silent suppress printed output (default TRUE) return.plot whether return tmap plot output subsample optionally sample N particles faster plotting seed.value set seed reproducibility ... additional args","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Settlement density — settlement_density","title":"Settlement density — settlement_density","text":"Function calculate settlement density across grid Uses sp::instead sf speed","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settlement density — settlement_density","text":"","code":"settlement_density(   input = NULL,   messages = FALSE,   calculate_hull = TRUE,   combined = FALSE,   cellsize = 20,   concavity = 1.2,   length_threshold = 10,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settlement density — settlement_density","text":"input input (defaults NULL) calculate_hull true/false calculate concave hull (can time intensive large datasets, defaults true) combined test allow multiple coralseed file inputs list (defaults FALSE) cellsize dimensions grid count settlers (defaults 20m) concavity concavity value passed concaveman (defaults 2 length_threshold length threshold passed concaveman (defaults 0) ... pass arguments","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Settlement statistics — settlement_statistics","title":"Settlement statistics — settlement_statistics","text":"Function generate settlement statistics coralseed output","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settlement statistics — settlement_statistics","text":"","code":"settlement_statistics(   input = NULL,   combined = FALSE,   cellsize = 20,   concavehull = TRUE,   concavity = 2,   length_threshold = 0,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settlement statistics — settlement_statistics","text":"input input (defaults NULL) combined test allow multiple coralseed file inputs list (defaults FALSE) cellsize dimensions grid count settlers (defaults 20m) concavehull return concave hull around settled particles (via concaveman) concavity concavity value passed concaveman (defaults 2 length_threshold length threshold passed concaveman (defaults 0) ... pass arguments","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise settlement results — settlement_summary","title":"Summarise settlement results — settlement_summary","text":"Computes summary statistics larval settlement outcomes including spatial footprint, distance travelled, density, spatial distribution metrics.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise settlement results — settlement_summary","text":"","code":"settlement_summary(seeded_particles, settled_particles, cellsize, ...)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise settlement results — settlement_summary","text":"seeded_particles List containing seed_particles data frame settlement time. settled_particles List containing settled particles $points (sf POINT) $paths (distance info). cellsize Numeric grid resolution used spatial footprint calculation. ... Additional arguments passed settlement_statistics().","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settlement_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise settlement results — settlement_summary","text":"data frame summary statistics.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settler_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Heatmap of Settler Particles — settler_heatmap","title":"Generate a Heatmap of Settler Particles — settler_heatmap","text":"function computes kernel density estimate (KDE) heatmap spatial points (settler particles) returns raster representation. bounding box expanded specified factor avoid edge effects. function computes kernel density estimate (KDE) heatmap spatial points (settler particles) returns raster representation. bounding box expanded specified factor avoid edge effects.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settler_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Heatmap of Settler Particles — settler_heatmap","text":"","code":"settler_heatmap(input, xres = 20, yres = 20, buffer_factor = 0.1)  settler_heatmap(input, xres = 20, yres = 20, buffer_factor = 0.1)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/settler_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Heatmap of Settler Particles — settler_heatmap","text":"input sf object containing point geometries representing settler particles. xres Numeric. resolution heatmap x direction meters. Default 20. yres Numeric. resolution heatmap y direction meters. Default 20. buffer_factor Numeric. proportion bounding box range expand heatmap extent. Default 0.1 10%. n KDE grid resolution threshold Numeric. Thresholding value < remove low-density values","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/settler_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Heatmap of Settler Particles — settler_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra)  # Example: Generate a random set of points set.seed(123) points_sf <- st_as_sf(data.frame(   X = runif(100, min = 1000, max = 2000),   Y = runif(100, min = 500, max = 1500) ), coords = c(\"X\", \"Y\"), crs = 4326)  # Generate heatmap with 50m resolution and 10% buffer heatmap <- settler_heatmap(points_sf, xres = 50, yres = 50, buffer_factor = 0.1)  # Plot result plot(heatmap) } # } if (FALSE) { # \\dontrun{ library(sf) library(terra)  # Example: Generate a random set of points set.seed(123) points_sf <- st_as_sf(data.frame(   X = runif(100, min = 1000, max = 2000),   Y = runif(100, min = 500, max = 1500) ), coords = c(\"X\", \"Y\"), crs = 4326)  # Generate heatmap with 50m resolution and 10% buffer heatmap <- settler_heatmap(points_sf, xres = 50, yres = 50, buffer_factor = 0.1)  # Plot result plot(heatmap) } # }"},{"path":"https://marine-ecologist.github.io/coralseed/reference/sf_to_xyzm.html","id":null,"dir":"Reference","previous_headings":"","what":"Build LINESTRING XYZM trips (integer M from a time column) — sf_to_xyzm","title":"Build LINESTRING XYZM trips (integer M from a time column) — sf_to_xyzm","text":"Minimal helper create LINESTRING XYZM mapdeck::add_trips() using integer range time/index column (e.g. \"dispersaltime\"). type = \"points\": group points group_col (default \"id\") ordered time, build one LINESTRING per group M = integer(time). type = \"linestring\": id_col present, collapse time-sliced features per id ramp M linearly t -> next_t along vertices; last slice uses next_t = t + 1. id_col, feature ramps t -> t+1.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/sf_to_xyzm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build LINESTRING XYZM trips (integer M from a time column) — sf_to_xyzm","text":"","code":"sf_to_xyzm(sf_obj, time_col = \"dispersaltime\", z_val = 0, cast_multi = TRUE)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/sf_to_xyzm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build LINESTRING XYZM trips (integer M from a time column) — sf_to_xyzm","text":"sf_obj sf object (POINTS type=\"points\"; LINESTRING/MULTILINESTRING type=\"linestring\") time_col character name time/index column (integers numeric) z_val numeric constant Z (default 0) cast_multi logical; cast MULTILINESTRING LINESTRING (default TRUE) type c(\"points\",\"linestring\") group_col character, group/id column points (default \"id\" present) id_col character, id column linestring collapse (default \"id\" present)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/sf_to_xyzm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build LINESTRING XYZM trips (integer M from a time column) — sf_to_xyzm","text":"Sets geometry m_range attribute required mapdeck.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/simulate_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Mortality — simulate_mortality","title":"Simulate Mortality — simulate_mortality","text":"Function simulate mortality population. simulate.mortality.n proportion population simulate mortality 24hr period.","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/simulate_mortality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Mortality — simulate_mortality","text":"","code":"simulate_mortality(   input = NULL,   simulate.mortality = NULL,   simulate.mortality.n = 0.1,   return.plot = TRUE,   silent = FALSE,   seed.value = NULL,   ... )"},{"path":"https://marine-ecologist.github.io/coralseed/reference/simulate_mortality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Mortality — simulate_mortality","text":"input input (e.g. seed_particles(), usually time-expanded sf object) simulate.mortality select mortality type (\"typeI\", \"typeII\", \"typeIII\") simulate.mortality.n proportion population simulate mortality (0–1) return.plot generate plot output (default: TRUE) silent suppress printed messages (default: FALSE) seed.value seed reproducibility (default: NULL) ... pass additional args","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/simulate_mortality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Mortality — simulate_mortality","text":"Mortality types , II, III Weibull-distributed. Set return.plot=TRUE visualise simulation vs empirical. Example: tmp <- simulate_mortality(particle_points_expanded, simulate.mortality = \"typeIII\", simulate.mortality.n = 0.2, return.plot = TRUE)","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/st_set_point.html","id":null,"dir":"Reference","previous_headings":"","what":"st_set_point — st_set_point","title":"st_set_point — st_set_point","text":"Function generate sf point lon, lat, crs","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/st_set_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"st_set_point — st_set_point","text":"","code":"st_set_point(lon, lat, crs = 20353)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/st_set_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"st_set_point — st_set_point","text":"lon longitude lat latitude crs coordinate reference system","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles.html","id":null,"dir":"Reference","previous_headings":"","what":"Stationary particles — stationary_particles","title":"Stationary particles — stationary_particles","text":"Function identify stationary particles particle tracks","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stationary particles — stationary_particles","text":"","code":"stationary_particles(input)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stationary particles — stationary_particles","text":"input input particle tracks subset n particles subset","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stationary particles — stationary_particles","text":"","code":"if (FALSE) { # \\dontrun{ stat_particles_liz22_del_14_33 <- stationary_particles(liz22_del_14_33)  stat_liz22_del_14_33_map <- stationary_particles_map(liz22_del_14_33 |>   filter(id %in% seq(0:1000))) stat_liz22_del_14_33_map <-   stationary_particles_map(coralseed:::Mermaid_PointSource_Bay_01 |>   filter(id %in% seq(0:1000)))  stat_liz22_del_14_33_map <-   stationary_particles_map(run_day_12039_liz22_del_11_35 |>   filter(id %in% seq(0:100)))  stat_liz22_del_14_33_stationary <-   stationary_particles(run_day_12039_liz22_del_11_35) } # }"},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map stationary particles — stationary_particles_map","title":"Map stationary particles — stationary_particles_map","text":"Function identify map stationary particles particle tracks","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map stationary particles — stationary_particles_map","text":"","code":"stationary_particles_map(input, subset = 100)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map stationary particles — stationary_particles_map","text":"input input particle tracks (e.g. coralseed:::Mermaid_PointSource_Bay_01) subset n particles subset","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/stationary_particles_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map stationary particles — stationary_particles_map","text":"","code":"if (FALSE) { # \\dontrun{  stat_particles_liz22_del_14_33 <-   stationary_particles(liz22_del_14_33)  stat_liz22_del_14_33_map <-   stationary_particles_map(liz22_del_14_33 |> filter(id %in% seq(0:1000))) stat_liz22_del_14_33_map <-   stationary_particles_map(coralseed:::Mermaid_PointSource_Bay_01 |>   filter(id %in% seq(0:1000)))  stat_liz22_del_14_33_map <-   stationary_particles_map(run_day_12039_liz22_del_11_35 |>   filter(id %in% seq(0:100)))  stat_liz22_del_14_33_stationary <-   stationary_particles(run_day_12039_liz22_del_11_35) } # }"},{"path":"https://marine-ecologist.github.io/coralseed/reference/test_functioning.html","id":null,"dir":"Reference","previous_headings":"","what":"Test function — test_functioning","title":"Test function — test_functioning","text":"Test function","code":""},{"path":"https://marine-ecologist.github.io/coralseed/reference/test_functioning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test function — test_functioning","text":"","code":"test_functioning(input)"},{"path":"https://marine-ecologist.github.io/coralseed/reference/test_functioning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test function — test_functioning","text":"input input","code":""},{"path":[]},{"path":"https://marine-ecologist.github.io/coralseed/news/index.html","id":"coralseed-101-110625","dir":"Changelog","previous_headings":"","what":"coralseed 1.0.1 (11/06/25)","title":"coralseed 1.0.1 (11/06/25)","text":"Initial CRAN submission. Added interactive CesiumJS visualisation support Included OceanParcels .zarr output loading Support sf::st_zm() Z-dimension check","code":""},{"path":"https://marine-ecologist.github.io/coralseed/news/index.html","id":"fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"coralseed 1.0.1 (11/06/25)","text":"Resolved CRS mismatch issues particle import Suppressed warnings unsupported zIndex use","code":""}]
